<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class PriceList implements \JsonSerializable
{
    /**
     * @var array
     */
    private $date = [];

    /**
     * @var array
     */
    private $day = [];

    /**
     * @var array
     */
    private $type = [];

    /**
     * @var array
     */
    private $priceListId = [];

    /**
     * @var array
     */
    private $priceListDescription = [];

    /**
     * @var array
     */
    private $priceRuleId = [];

    /**
     * @var array
     */
    private $priceRuleName = [];

    /**
     * @var array
     */
    private $delCoId = [];

    /**
     * @var array
     */
    private $countryCode = [];

    /**
     * @var array
     */
    private $country = [];

    /**
     * @var array
     */
    private $productGroupId = [];

    /**
     * @var array
     */
    private $productGroupName = [];

    /**
     * @var array
     */
    private $productCode = [];

    /**
     * @var array
     */
    private $productId = [];

    /**
     * @var array
     */
    private $productName = [];

    /**
     * @var array
     */
    private $pricePerUnit = [];

    /**
     * @var array
     */
    private $currencyCode = [];

    /**
     * @var array
     */
    private $currencySymbol = [];

    /**
     * @var array
     */
    private $priceType = [];

    /**
     * @var array
     */
    private $siteGroupId = [];

    /**
     * @var array
     */
    private $siteGroupName = [];

    /**
     * @var array
     */
    private $siteCode = [];

    /**
     * @var array
     */
    private $siteId = [];

    /**
     * @var array
     */
    private $siteName = [];

    /**
     * @var array
     */
    private $fuelNetworkId = [];

    /**
     * @var array
     */
    private $networkName = [];

    /**
     * @var array
     */
    private $priceRuleDelcoId = [];

    /**
     * @var array
     */
    private $priceRuleDelcoName = [];

    /**
     * @var array
     */
    private $priceRuleCountry = [];

    /**
     * @var array
     */
    private $priceRuleCountryCode = [];

    /**
     * @var array
     */
    private $priceRuleBasisId = [];

    /**
     * @var array
     */
    private $discountValue = [];

    /**
     * @var array
     */
    private $pricePerUnitAfterDiscount = [];

    /**
     * @var array
     */
    private $vATPercentage = [];

    /**
     * @var array
     */
    private $priceRuleCategoryId = [];

    /**
     * @var Tier[]|null
     */
    private $tiers;

    /**
     * Returns Date.
     * Date on which the price is applicable.
     * Format: yyyyMMdd
     * E.g.: 20180131
     */
    public function getDate(): ?string
    {
        if (count($this->date) == 0) {
            return null;
        }
        return $this->date['value'];
    }

    /**
     * Sets Date.
     * Date on which the price is applicable.
     * Format: yyyyMMdd
     * E.g.: 20180131
     *
     * @maps Date
     */
    public function setDate(?string $date): void
    {
        $this->date['value'] = $date;
    }

    /**
     * Unsets Date.
     * Date on which the price is applicable.
     * Format: yyyyMMdd
     * E.g.: 20180131
     */
    public function unsetDate(): void
    {
        $this->date = [];
    }

    /**
     * Returns Day.
     * Day on which the price is applicable.
     * E.g.: Sunday, Monday etc.
     */
    public function getDay(): ?string
    {
        if (count($this->day) == 0) {
            return null;
        }
        return $this->day['value'];
    }

    /**
     * Sets Day.
     * Day on which the price is applicable.
     * E.g.: Sunday, Monday etc.
     *
     * @maps Day
     */
    public function setDay(?string $day): void
    {
        $this->day['value'] = $day;
    }

    /**
     * Unsets Day.
     * Day on which the price is applicable.
     * E.g.: Sunday, Monday etc.
     */
    public function unsetDay(): void
    {
        $this->day = [];
    }

    /**
     * Returns Type.
     * Price list type.
     * E.g., List, Shell Standard International List
     */
    public function getType(): ?string
    {
        if (count($this->type) == 0) {
            return null;
        }
        return $this->type['value'];
    }

    /**
     * Sets Type.
     * Price list type.
     * E.g., List, Shell Standard International List
     *
     * @maps Type
     */
    public function setType(?string $type): void
    {
        $this->type['value'] = $type;
    }

    /**
     * Unsets Type.
     * Price list type.
     * E.g., List, Shell Standard International List
     */
    public function unsetType(): void
    {
        $this->type = [];
    }

    /**
     * Returns Price List Id.
     * Price list ID
     */
    public function getPriceListId(): ?int
    {
        if (count($this->priceListId) == 0) {
            return null;
        }
        return $this->priceListId['value'];
    }

    /**
     * Sets Price List Id.
     * Price list ID
     *
     * @maps PriceListId
     */
    public function setPriceListId(?int $priceListId): void
    {
        $this->priceListId['value'] = $priceListId;
    }

    /**
     * Unsets Price List Id.
     * Price list ID
     */
    public function unsetPriceListId(): void
    {
        $this->priceListId = [];
    }

    /**
     * Returns Price List Description.
     * Price list description
     * E.g., UK Fuels CRT Reseller List Price
     */
    public function getPriceListDescription(): ?string
    {
        if (count($this->priceListDescription) == 0) {
            return null;
        }
        return $this->priceListDescription['value'];
    }

    /**
     * Sets Price List Description.
     * Price list description
     * E.g., UK Fuels CRT Reseller List Price
     *
     * @maps PriceListDescription
     */
    public function setPriceListDescription(?string $priceListDescription): void
    {
        $this->priceListDescription['value'] = $priceListDescription;
    }

    /**
     * Unsets Price List Description.
     * Price list description
     * E.g., UK Fuels CRT Reseller List Price
     */
    public function unsetPriceListDescription(): void
    {
        $this->priceListDescription = [];
    }

    /**
     * Returns Price Rule Id.
     * Price Rule Id
     */
    public function getPriceRuleId(): ?int
    {
        if (count($this->priceRuleId) == 0) {
            return null;
        }
        return $this->priceRuleId['value'];
    }

    /**
     * Sets Price Rule Id.
     * Price Rule Id
     *
     * @maps PriceRuleId
     */
    public function setPriceRuleId(?int $priceRuleId): void
    {
        $this->priceRuleId['value'] = $priceRuleId;
    }

    /**
     * Unsets Price Rule Id.
     * Price Rule Id
     */
    public function unsetPriceRuleId(): void
    {
        $this->priceRuleId = [];
    }

    /**
     * Returns Price Rule Name.
     * Price Rule Name
     */
    public function getPriceRuleName(): ?string
    {
        if (count($this->priceRuleName) == 0) {
            return null;
        }
        return $this->priceRuleName['value'];
    }

    /**
     * Sets Price Rule Name.
     * Price Rule Name
     *
     * @maps PriceRuleName
     */
    public function setPriceRuleName(?string $priceRuleName): void
    {
        $this->priceRuleName['value'] = $priceRuleName;
    }

    /**
     * Unsets Price Rule Name.
     * Price Rule Name
     */
    public function unsetPriceRuleName(): void
    {
        $this->priceRuleName = [];
    }

    /**
     * Returns Del Co Id.
     * DelCo Id
     */
    public function getDelCoId(): ?int
    {
        if (count($this->delCoId) == 0) {
            return null;
        }
        return $this->delCoId['value'];
    }

    /**
     * Sets Del Co Id.
     * DelCo Id
     *
     * @maps DelCoId
     */
    public function setDelCoId(?int $delCoId): void
    {
        $this->delCoId['value'] = $delCoId;
    }

    /**
     * Unsets Del Co Id.
     * DelCo Id
     */
    public function unsetDelCoId(): void
    {
        $this->delCoId = [];
    }

    /**
     * Returns Country Code.
     * Country ISO Code
     * E.g., UK, NL, etc.,
     */
    public function getCountryCode(): ?string
    {
        if (count($this->countryCode) == 0) {
            return null;
        }
        return $this->countryCode['value'];
    }

    /**
     * Sets Country Code.
     * Country ISO Code
     * E.g., UK, NL, etc.,
     *
     * @maps CountryCode
     */
    public function setCountryCode(?string $countryCode): void
    {
        $this->countryCode['value'] = $countryCode;
    }

    /**
     * Unsets Country Code.
     * Country ISO Code
     * E.g., UK, NL, etc.,
     */
    public function unsetCountryCode(): void
    {
        $this->countryCode = [];
    }

    /**
     * Returns Country.
     * Country
     * E.g., United Kingdom, Netherlands etc
     */
    public function getCountry(): ?string
    {
        if (count($this->country) == 0) {
            return null;
        }
        return $this->country['value'];
    }

    /**
     * Sets Country.
     * Country
     * E.g., United Kingdom, Netherlands etc
     *
     * @maps Country
     */
    public function setCountry(?string $country): void
    {
        $this->country['value'] = $country;
    }

    /**
     * Unsets Country.
     * Country
     * E.g., United Kingdom, Netherlands etc
     */
    public function unsetCountry(): void
    {
        $this->country = [];
    }

    /**
     * Returns Product Group Id.
     * Product Group Id
     */
    public function getProductGroupId(): ?int
    {
        if (count($this->productGroupId) == 0) {
            return null;
        }
        return $this->productGroupId['value'];
    }

    /**
     * Sets Product Group Id.
     * Product Group Id
     *
     * @maps ProductGroupId
     */
    public function setProductGroupId(?int $productGroupId): void
    {
        $this->productGroupId['value'] = $productGroupId;
    }

    /**
     * Unsets Product Group Id.
     * Product Group Id
     */
    public function unsetProductGroupId(): void
    {
        $this->productGroupId = [];
    }

    /**
     * Returns Product Group Name.
     * Product Group name
     */
    public function getProductGroupName(): ?string
    {
        if (count($this->productGroupName) == 0) {
            return null;
        }
        return $this->productGroupName['value'];
    }

    /**
     * Sets Product Group Name.
     * Product Group name
     *
     * @maps ProductGroupName
     */
    public function setProductGroupName(?string $productGroupName): void
    {
        $this->productGroupName['value'] = $productGroupName;
    }

    /**
     * Unsets Product Group Name.
     * Product Group name
     */
    public function unsetProductGroupName(): void
    {
        $this->productGroupName = [];
    }

    /**
     * Returns Product Code.
     * Client Product Code
     */
    public function getProductCode(): ?string
    {
        if (count($this->productCode) == 0) {
            return null;
        }
        return $this->productCode['value'];
    }

    /**
     * Sets Product Code.
     * Client Product Code
     *
     * @maps ProductCode
     */
    public function setProductCode(?string $productCode): void
    {
        $this->productCode['value'] = $productCode;
    }

    /**
     * Unsets Product Code.
     * Client Product Code
     */
    public function unsetProductCode(): void
    {
        $this->productCode = [];
    }

    /**
     * Returns Product Id.
     * Product Id
     */
    public function getProductId(): ?int
    {
        if (count($this->productId) == 0) {
            return null;
        }
        return $this->productId['value'];
    }

    /**
     * Sets Product Id.
     * Product Id
     *
     * @maps ProductId
     */
    public function setProductId(?int $productId): void
    {
        $this->productId['value'] = $productId;
    }

    /**
     * Unsets Product Id.
     * Product Id
     */
    public function unsetProductId(): void
    {
        $this->productId = [];
    }

    /**
     * Returns Product Name.
     * Product name in English
     */
    public function getProductName(): ?string
    {
        if (count($this->productName) == 0) {
            return null;
        }
        return $this->productName['value'];
    }

    /**
     * Sets Product Name.
     * Product name in English
     *
     * @maps ProductName
     */
    public function setProductName(?string $productName): void
    {
        $this->productName['value'] = $productName;
    }

    /**
     * Unsets Product Name.
     * Product name in English
     */
    public function unsetProductName(): void
    {
        $this->productName = [];
    }

    /**
     * Returns Price Per Unit.
     * Price per unit
     */
    public function getPricePerUnit(): ?float
    {
        if (count($this->pricePerUnit) == 0) {
            return null;
        }
        return $this->pricePerUnit['value'];
    }

    /**
     * Sets Price Per Unit.
     * Price per unit
     *
     * @maps PricePerUnit
     */
    public function setPricePerUnit(?float $pricePerUnit): void
    {
        $this->pricePerUnit['value'] = $pricePerUnit;
    }

    /**
     * Unsets Price Per Unit.
     * Price per unit
     */
    public function unsetPricePerUnit(): void
    {
        $this->pricePerUnit = [];
    }

    /**
     * Returns Currency Code.
     * Currency Code.
     * Format : 3 digit ISO code
     */
    public function getCurrencyCode(): ?string
    {
        if (count($this->currencyCode) == 0) {
            return null;
        }
        return $this->currencyCode['value'];
    }

    /**
     * Sets Currency Code.
     * Currency Code.
     * Format : 3 digit ISO code
     *
     * @maps CurrencyCode
     */
    public function setCurrencyCode(?string $currencyCode): void
    {
        $this->currencyCode['value'] = $currencyCode;
    }

    /**
     * Unsets Currency Code.
     * Currency Code.
     * Format : 3 digit ISO code
     */
    public function unsetCurrencyCode(): void
    {
        $this->currencyCode = [];
    }

    /**
     * Returns Currency Symbol.
     * Currency Symbol
     * Example: £
     */
    public function getCurrencySymbol(): ?string
    {
        if (count($this->currencySymbol) == 0) {
            return null;
        }
        return $this->currencySymbol['value'];
    }

    /**
     * Sets Currency Symbol.
     * Currency Symbol
     * Example: £
     *
     * @maps CurrencySymbol
     */
    public function setCurrencySymbol(?string $currencySymbol): void
    {
        $this->currencySymbol['value'] = $currencySymbol;
    }

    /**
     * Unsets Currency Symbol.
     * Currency Symbol
     * Example: £
     */
    public function unsetCurrencySymbol(): void
    {
        $this->currencySymbol = [];
    }

    /**
     * Returns Price Type.
     * Price Type
     * Possible Values are:
     * •    Country– Price rule defined at country whereas Price Rule DelcoId same as ColcoId.
     * •    TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule DelcoId is different from
     * ColcoId.
     * •    NetworkPrice – Price rule defined at Fuel Network level.
     * •    Other – Price rule defined at either Site or SiteGroup level.
     */
    public function getPriceType(): ?string
    {
        if (count($this->priceType) == 0) {
            return null;
        }
        return $this->priceType['value'];
    }

    /**
     * Sets Price Type.
     * Price Type
     * Possible Values are:
     * •    Country– Price rule defined at country whereas Price Rule DelcoId same as ColcoId.
     * •    TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule DelcoId is different from
     * ColcoId.
     * •    NetworkPrice – Price rule defined at Fuel Network level.
     * •    Other – Price rule defined at either Site or SiteGroup level.
     *
     * @maps PriceType
     */
    public function setPriceType(?string $priceType): void
    {
        $this->priceType['value'] = $priceType;
    }

    /**
     * Unsets Price Type.
     * Price Type
     * Possible Values are:
     * •    Country– Price rule defined at country whereas Price Rule DelcoId same as ColcoId.
     * •    TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule DelcoId is different from
     * ColcoId.
     * •    NetworkPrice – Price rule defined at Fuel Network level.
     * •    Other – Price rule defined at either Site or SiteGroup level.
     */
    public function unsetPriceType(): void
    {
        $this->priceType = [];
    }

    /**
     * Returns Site Group Id.
     * Site-Group ID
     * E.g.: 100007
     */
    public function getSiteGroupId(): ?int
    {
        if (count($this->siteGroupId) == 0) {
            return null;
        }
        return $this->siteGroupId['value'];
    }

    /**
     * Sets Site Group Id.
     * Site-Group ID
     * E.g.: 100007
     *
     * @maps SiteGroupId
     */
    public function setSiteGroupId(?int $siteGroupId): void
    {
        $this->siteGroupId['value'] = $siteGroupId;
    }

    /**
     * Unsets Site Group Id.
     * Site-Group ID
     * E.g.: 100007
     */
    public function unsetSiteGroupId(): void
    {
        $this->siteGroupId = [];
    }

    /**
     * Returns Site Group Name.
     * Site-Group name
     */
    public function getSiteGroupName(): ?string
    {
        if (count($this->siteGroupName) == 0) {
            return null;
        }
        return $this->siteGroupName['value'];
    }

    /**
     * Sets Site Group Name.
     * Site-Group name
     *
     * @maps SiteGroupName
     */
    public function setSiteGroupName(?string $siteGroupName): void
    {
        $this->siteGroupName['value'] = $siteGroupName;
    }

    /**
     * Unsets Site Group Name.
     * Site-Group name
     */
    public function unsetSiteGroupName(): void
    {
        $this->siteGroupName = [];
    }

    /**
     * Returns Site Code.
     * Site Code
     */
    public function getSiteCode(): ?int
    {
        if (count($this->siteCode) == 0) {
            return null;
        }
        return $this->siteCode['value'];
    }

    /**
     * Sets Site Code.
     * Site Code
     *
     * @maps SiteCode
     */
    public function setSiteCode(?int $siteCode): void
    {
        $this->siteCode['value'] = $siteCode;
    }

    /**
     * Unsets Site Code.
     * Site Code
     */
    public function unsetSiteCode(): void
    {
        $this->siteCode = [];
    }

    /**
     * Returns Site Id.
     * Site ID
     */
    public function getSiteId(): ?int
    {
        if (count($this->siteId) == 0) {
            return null;
        }
        return $this->siteId['value'];
    }

    /**
     * Sets Site Id.
     * Site ID
     *
     * @maps SiteId
     */
    public function setSiteId(?int $siteId): void
    {
        $this->siteId['value'] = $siteId;
    }

    /**
     * Unsets Site Id.
     * Site ID
     */
    public function unsetSiteId(): void
    {
        $this->siteId = [];
    }

    /**
     * Returns Site Name.
     * Site Name
     */
    public function getSiteName(): ?string
    {
        if (count($this->siteName) == 0) {
            return null;
        }
        return $this->siteName['value'];
    }

    /**
     * Sets Site Name.
     * Site Name
     *
     * @maps SiteName
     */
    public function setSiteName(?string $siteName): void
    {
        $this->siteName['value'] = $siteName;
    }

    /**
     * Unsets Site Name.
     * Site Name
     */
    public function unsetSiteName(): void
    {
        $this->siteName = [];
    }

    /**
     * Returns Fuel Network Id.
     * Fuel Network ID
     */
    public function getFuelNetworkId(): ?int
    {
        if (count($this->fuelNetworkId) == 0) {
            return null;
        }
        return $this->fuelNetworkId['value'];
    }

    /**
     * Sets Fuel Network Id.
     * Fuel Network ID
     *
     * @maps FuelNetworkId
     */
    public function setFuelNetworkId(?int $fuelNetworkId): void
    {
        $this->fuelNetworkId['value'] = $fuelNetworkId;
    }

    /**
     * Unsets Fuel Network Id.
     * Fuel Network ID
     */
    public function unsetFuelNetworkId(): void
    {
        $this->fuelNetworkId = [];
    }

    /**
     * Returns Network Name.
     * Network Name
     */
    public function getNetworkName(): ?string
    {
        if (count($this->networkName) == 0) {
            return null;
        }
        return $this->networkName['value'];
    }

    /**
     * Sets Network Name.
     * Network Name
     *
     * @maps NetworkName
     */
    public function setNetworkName(?string $networkName): void
    {
        $this->networkName['value'] = $networkName;
    }

    /**
     * Unsets Network Name.
     * Network Name
     */
    public function unsetNetworkName(): void
    {
        $this->networkName = [];
    }

    /**
     * Returns Price Rule Delco Id.
     * PriceRuleDelcoId
     */
    public function getPriceRuleDelcoId(): ?int
    {
        if (count($this->priceRuleDelcoId) == 0) {
            return null;
        }
        return $this->priceRuleDelcoId['value'];
    }

    /**
     * Sets Price Rule Delco Id.
     * PriceRuleDelcoId
     *
     * @maps PriceRuleDelcoId
     */
    public function setPriceRuleDelcoId(?int $priceRuleDelcoId): void
    {
        $this->priceRuleDelcoId['value'] = $priceRuleDelcoId;
    }

    /**
     * Unsets Price Rule Delco Id.
     * PriceRuleDelcoId
     */
    public function unsetPriceRuleDelcoId(): void
    {
        $this->priceRuleDelcoId = [];
    }

    /**
     * Returns Price Rule Delco Name.
     * Company Name of the price rule DelCo.
     *
     *
     *
     * E.g.:
     *
     * •    Pilipinas Shell Petroleum Corp
     *
     * •    Shell U.K. Oil Products Limited
     *
     * •    G & V SERVICE STATIONS NV
     */
    public function getPriceRuleDelcoName(): ?string
    {
        if (count($this->priceRuleDelcoName) == 0) {
            return null;
        }
        return $this->priceRuleDelcoName['value'];
    }

    /**
     * Sets Price Rule Delco Name.
     * Company Name of the price rule DelCo.
     *
     *
     *
     * E.g.:
     *
     * •    Pilipinas Shell Petroleum Corp
     *
     * •    Shell U.K. Oil Products Limited
     *
     * •    G & V SERVICE STATIONS NV
     *
     * @maps PriceRuleDelcoName
     */
    public function setPriceRuleDelcoName(?string $priceRuleDelcoName): void
    {
        $this->priceRuleDelcoName['value'] = $priceRuleDelcoName;
    }

    /**
     * Unsets Price Rule Delco Name.
     * Company Name of the price rule DelCo.
     *
     *
     *
     * E.g.:
     *
     * •    Pilipinas Shell Petroleum Corp
     *
     * •    Shell U.K. Oil Products Limited
     *
     * •    G & V SERVICE STATIONS NV
     */
    public function unsetPriceRuleDelcoName(): void
    {
        $this->priceRuleDelcoName = [];
    }

    /**
     * Returns Price Rule Country.
     * PriceRuleCountry
     * E.g.: United Kingdom
     */
    public function getPriceRuleCountry(): ?string
    {
        if (count($this->priceRuleCountry) == 0) {
            return null;
        }
        return $this->priceRuleCountry['value'];
    }

    /**
     * Sets Price Rule Country.
     * PriceRuleCountry
     * E.g.: United Kingdom
     *
     * @maps PriceRuleCountry
     */
    public function setPriceRuleCountry(?string $priceRuleCountry): void
    {
        $this->priceRuleCountry['value'] = $priceRuleCountry;
    }

    /**
     * Unsets Price Rule Country.
     * PriceRuleCountry
     * E.g.: United Kingdom
     */
    public function unsetPriceRuleCountry(): void
    {
        $this->priceRuleCountry = [];
    }

    /**
     * Returns Price Rule Country Code.
     * ISO Code of PriceRuleCountry
     * E.g.: UK, NL, etc.,
     */
    public function getPriceRuleCountryCode(): ?string
    {
        if (count($this->priceRuleCountryCode) == 0) {
            return null;
        }
        return $this->priceRuleCountryCode['value'];
    }

    /**
     * Sets Price Rule Country Code.
     * ISO Code of PriceRuleCountry
     * E.g.: UK, NL, etc.,
     *
     * @maps PriceRuleCountryCode
     */
    public function setPriceRuleCountryCode(?string $priceRuleCountryCode): void
    {
        $this->priceRuleCountryCode['value'] = $priceRuleCountryCode;
    }

    /**
     * Unsets Price Rule Country Code.
     * ISO Code of PriceRuleCountry
     * E.g.: UK, NL, etc.,
     */
    public function unsetPriceRuleCountryCode(): void
    {
        $this->priceRuleCountryCode = [];
    }

    /**
     * Returns Price Rule Basis Id.
     * PriceRuleBasisId
     */
    public function getPriceRuleBasisId(): ?int
    {
        if (count($this->priceRuleBasisId) == 0) {
            return null;
        }
        return $this->priceRuleBasisId['value'];
    }

    /**
     * Sets Price Rule Basis Id.
     * PriceRuleBasisId
     *
     * @maps PriceRuleBasisId
     */
    public function setPriceRuleBasisId(?int $priceRuleBasisId): void
    {
        $this->priceRuleBasisId['value'] = $priceRuleBasisId;
    }

    /**
     * Unsets Price Rule Basis Id.
     * PriceRuleBasisId
     */
    public function unsetPriceRuleBasisId(): void
    {
        $this->priceRuleBasisId = [];
    }

    /**
     * Returns Discount Value.
     * Discount value
     */
    public function getDiscountValue(): ?float
    {
        if (count($this->discountValue) == 0) {
            return null;
        }
        return $this->discountValue['value'];
    }

    /**
     * Sets Discount Value.
     * Discount value
     *
     * @maps DiscountValue
     */
    public function setDiscountValue(?float $discountValue): void
    {
        $this->discountValue['value'] = $discountValue;
    }

    /**
     * Unsets Discount Value.
     * Discount value
     */
    public function unsetDiscountValue(): void
    {
        $this->discountValue = [];
    }

    /**
     * Returns Price Per Unit After Discount.
     * Price per unit after discount
     */
    public function getPricePerUnitAfterDiscount(): ?float
    {
        if (count($this->pricePerUnitAfterDiscount) == 0) {
            return null;
        }
        return $this->pricePerUnitAfterDiscount['value'];
    }

    /**
     * Sets Price Per Unit After Discount.
     * Price per unit after discount
     *
     * @maps PricePerUnitAfterDiscount
     */
    public function setPricePerUnitAfterDiscount(?float $pricePerUnitAfterDiscount): void
    {
        $this->pricePerUnitAfterDiscount['value'] = $pricePerUnitAfterDiscount;
    }

    /**
     * Unsets Price Per Unit After Discount.
     * Price per unit after discount
     */
    public function unsetPricePerUnitAfterDiscount(): void
    {
        $this->pricePerUnitAfterDiscount = [];
    }

    /**
     * Returns V at Percentage.
     * VAT Percentage
     */
    public function getVATPercentage(): ?float
    {
        if (count($this->vATPercentage) == 0) {
            return null;
        }
        return $this->vATPercentage['value'];
    }

    /**
     * Sets V at Percentage.
     * VAT Percentage
     *
     * @maps VATPercentage
     */
    public function setVATPercentage(?float $vATPercentage): void
    {
        $this->vATPercentage['value'] = $vATPercentage;
    }

    /**
     * Unsets V at Percentage.
     * VAT Percentage
     */
    public function unsetVATPercentage(): void
    {
        $this->vATPercentage = [];
    }

    /**
     * Returns Price Rule Category Id.
     * PriceRuleCategoryId
     */
    public function getPriceRuleCategoryId(): ?int
    {
        if (count($this->priceRuleCategoryId) == 0) {
            return null;
        }
        return $this->priceRuleCategoryId['value'];
    }

    /**
     * Sets Price Rule Category Id.
     * PriceRuleCategoryId
     *
     * @maps PriceRuleCategoryId
     */
    public function setPriceRuleCategoryId(?int $priceRuleCategoryId): void
    {
        $this->priceRuleCategoryId['value'] = $priceRuleCategoryId;
    }

    /**
     * Unsets Price Rule Category Id.
     * PriceRuleCategoryId
     */
    public function unsetPriceRuleCategoryId(): void
    {
        $this->priceRuleCategoryId = [];
    }

    /**
     * Returns Tiers.
     *
     * @return Tier[]|null
     */
    public function getTiers(): ?array
    {
        return $this->tiers;
    }

    /**
     * Sets Tiers.
     *
     * @maps Tiers
     *
     * @param Tier[]|null $tiers
     */
    public function setTiers(?array $tiers): void
    {
        $this->tiers = $tiers;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->date)) {
            $json['Date']                      = $this->date['value'];
        }
        if (!empty($this->day)) {
            $json['Day']                       = $this->day['value'];
        }
        if (!empty($this->type)) {
            $json['Type']                      = $this->type['value'];
        }
        if (!empty($this->priceListId)) {
            $json['PriceListId']               = $this->priceListId['value'];
        }
        if (!empty($this->priceListDescription)) {
            $json['PriceListDescription']      = $this->priceListDescription['value'];
        }
        if (!empty($this->priceRuleId)) {
            $json['PriceRuleId']               = $this->priceRuleId['value'];
        }
        if (!empty($this->priceRuleName)) {
            $json['PriceRuleName']             = $this->priceRuleName['value'];
        }
        if (!empty($this->delCoId)) {
            $json['DelCoId']                   = $this->delCoId['value'];
        }
        if (!empty($this->countryCode)) {
            $json['CountryCode']               = $this->countryCode['value'];
        }
        if (!empty($this->country)) {
            $json['Country']                   = $this->country['value'];
        }
        if (!empty($this->productGroupId)) {
            $json['ProductGroupId']            = $this->productGroupId['value'];
        }
        if (!empty($this->productGroupName)) {
            $json['ProductGroupName']          = $this->productGroupName['value'];
        }
        if (!empty($this->productCode)) {
            $json['ProductCode']               = $this->productCode['value'];
        }
        if (!empty($this->productId)) {
            $json['ProductId']                 = $this->productId['value'];
        }
        if (!empty($this->productName)) {
            $json['ProductName']               = $this->productName['value'];
        }
        if (!empty($this->pricePerUnit)) {
            $json['PricePerUnit']              = $this->pricePerUnit['value'];
        }
        if (!empty($this->currencyCode)) {
            $json['CurrencyCode']              = $this->currencyCode['value'];
        }
        if (!empty($this->currencySymbol)) {
            $json['CurrencySymbol']            = $this->currencySymbol['value'];
        }
        if (!empty($this->priceType)) {
            $json['PriceType']                 = $this->priceType['value'];
        }
        if (!empty($this->siteGroupId)) {
            $json['SiteGroupId']               = $this->siteGroupId['value'];
        }
        if (!empty($this->siteGroupName)) {
            $json['SiteGroupName']             = $this->siteGroupName['value'];
        }
        if (!empty($this->siteCode)) {
            $json['SiteCode']                  = $this->siteCode['value'];
        }
        if (!empty($this->siteId)) {
            $json['SiteId']                    = $this->siteId['value'];
        }
        if (!empty($this->siteName)) {
            $json['SiteName']                  = $this->siteName['value'];
        }
        if (!empty($this->fuelNetworkId)) {
            $json['FuelNetworkId']             = $this->fuelNetworkId['value'];
        }
        if (!empty($this->networkName)) {
            $json['NetworkName']               = $this->networkName['value'];
        }
        if (!empty($this->priceRuleDelcoId)) {
            $json['PriceRuleDelcoId']          = $this->priceRuleDelcoId['value'];
        }
        if (!empty($this->priceRuleDelcoName)) {
            $json['PriceRuleDelcoName']        = $this->priceRuleDelcoName['value'];
        }
        if (!empty($this->priceRuleCountry)) {
            $json['PriceRuleCountry']          = $this->priceRuleCountry['value'];
        }
        if (!empty($this->priceRuleCountryCode)) {
            $json['PriceRuleCountryCode']      = $this->priceRuleCountryCode['value'];
        }
        if (!empty($this->priceRuleBasisId)) {
            $json['PriceRuleBasisId']          = $this->priceRuleBasisId['value'];
        }
        if (!empty($this->discountValue)) {
            $json['DiscountValue']             = $this->discountValue['value'];
        }
        if (!empty($this->pricePerUnitAfterDiscount)) {
            $json['PricePerUnitAfterDiscount'] = $this->pricePerUnitAfterDiscount['value'];
        }
        if (!empty($this->vATPercentage)) {
            $json['VATPercentage']             = $this->vATPercentage['value'];
        }
        if (!empty($this->priceRuleCategoryId)) {
            $json['PriceRuleCategoryId']       = $this->priceRuleCategoryId['value'];
        }
        if (isset($this->tiers)) {
            $json['Tiers']                     = $this->tiers;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
