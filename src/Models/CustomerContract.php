<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class CustomerContract implements \JsonSerializable
{
    /**
     * @var array
     */
    private $partnerId = [];

    /**
     * @var array
     */
    private $partnerName = [];

    /**
     * Returns Partner Id.
     * Partner Id in e-TM system
     */
    public function getPartnerId(): ?string
    {
        if (count($this->partnerId) == 0) {
            return null;
        }
        return $this->partnerId['value'];
    }

    /**
     * Sets Partner Id.
     * Partner Id in e-TM system
     *
     * @maps PartnerId
     */
    public function setPartnerId(?string $partnerId): void
    {
        $this->partnerId['value'] = $partnerId;
    }

    /**
     * Unsets Partner Id.
     * Partner Id in e-TM system
     */
    public function unsetPartnerId(): void
    {
        $this->partnerId = [];
    }

    /**
     * Returns Partner Name.
     * Partner Name in e-TM system
     */
    public function getPartnerName(): ?string
    {
        if (count($this->partnerName) == 0) {
            return null;
        }
        return $this->partnerName['value'];
    }

    /**
     * Sets Partner Name.
     * Partner Name in e-TM system
     *
     * @maps PartnerName
     */
    public function setPartnerName(?string $partnerName): void
    {
        $this->partnerName['value'] = $partnerName;
    }

    /**
     * Unsets Partner Name.
     * Partner Name in e-TM system
     */
    public function unsetPartnerName(): void
    {
        $this->partnerName = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->partnerId)) {
            $json['PartnerId']   = $this->partnerId['value'];
        }
        if (!empty($this->partnerName)) {
            $json['PartnerName'] = $this->partnerName['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
