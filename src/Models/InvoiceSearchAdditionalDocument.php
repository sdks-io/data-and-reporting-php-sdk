<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

/**
 * Invoice document reference number for the additional invoice files such as KSeF file (Poland). This
 * field is optional, and it will be missing if additional documents are not applicable. Also, it will
 * not be populated if the invoice date is older than 13 months.
 */
class InvoiceSearchAdditionalDocument implements \JsonSerializable
{
    /**
     * @var array
     */
    private $reference = [];

    /**
     * @var array
     */
    private $type = [];

    /**
     * @var array
     */
    private $isApplicable = [];

    /**
     * Returns Reference.
     * Unique ID for the additional invoice document.
     */
    public function getReference(): ?string
    {
        if (count($this->reference) == 0) {
            return null;
        }
        return $this->reference['value'];
    }

    /**
     * Sets Reference.
     * Unique ID for the additional invoice document.
     *
     * @maps Reference
     */
    public function setReference(?string $reference): void
    {
        $this->reference['value'] = $reference;
    }

    /**
     * Unsets Reference.
     * Unique ID for the additional invoice document.
     */
    public function unsetReference(): void
    {
        $this->reference = [];
    }

    /**
     * Returns Type.
     * Type of the additional document.
     *
     * Mandatory
     *
     * Possible values:
     *
     * • KSeF - Applicable for Poland market.
     */
    public function getType(): ?string
    {
        if (count($this->type) == 0) {
            return null;
        }
        return $this->type['value'];
    }

    /**
     * Sets Type.
     * Type of the additional document.
     *
     * Mandatory
     *
     * Possible values:
     *
     * • KSeF - Applicable for Poland market.
     *
     * @maps Type
     */
    public function setType(?string $type): void
    {
        $this->type['value'] = $type;
    }

    /**
     * Unsets Type.
     * Type of the additional document.
     *
     * Mandatory
     *
     * Possible values:
     *
     * • KSeF - Applicable for Poland market.
     */
    public function unsetType(): void
    {
        $this->type = [];
    }

    /**
     * Returns Is Applicable.
     * True if a KSeF PDF will be produced for the customer.
     */
    public function getIsApplicable(): ?string
    {
        if (count($this->isApplicable) == 0) {
            return null;
        }
        return $this->isApplicable['value'];
    }

    /**
     * Sets Is Applicable.
     * True if a KSeF PDF will be produced for the customer.
     *
     * @maps IsApplicable
     */
    public function setIsApplicable(?string $isApplicable): void
    {
        $this->isApplicable['value'] = $isApplicable;
    }

    /**
     * Unsets Is Applicable.
     * True if a KSeF PDF will be produced for the customer.
     */
    public function unsetIsApplicable(): void
    {
        $this->isApplicable = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->reference)) {
            $json['Reference']    = $this->reference['value'];
        }
        if (!empty($this->type)) {
            $json['Type']         = $this->type['value'];
        }
        if (!empty($this->isApplicable)) {
            $json['IsApplicable'] = $this->isApplicable['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
