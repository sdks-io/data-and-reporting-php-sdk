<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class RecentTransactionRequest implements \JsonSerializable
{
    /**
     * @var int
     */
    private $pageSize;

    /**
     * @var int
     */
    private $page;

    /**
     * @var RecentTransactionReq
     */
    private $filters;

    /**
     * @param int $pageSize
     * @param int $page
     * @param RecentTransactionReq $filters
     */
    public function __construct(int $pageSize, int $page, RecentTransactionReq $filters)
    {
        $this->pageSize = $pageSize;
        $this->page = $page;
        $this->filters = $filters;
    }

    /**
     * Returns Page Size.
     * Specify the number of records to returned; Max 1000
     */
    public function getPageSize(): int
    {
        return $this->pageSize;
    }

    /**
     * Sets Page Size.
     * Specify the number of records to returned; Max 1000
     *
     * @required
     * @maps PageSize
     */
    public function setPageSize(int $pageSize): void
    {
        $this->pageSize = $pageSize;
    }

    /**
     * Returns Page.
     * Specify the page of results to be returned.
     */
    public function getPage(): int
    {
        return $this->page;
    }

    /**
     * Sets Page.
     * Specify the page of results to be returned.
     *
     * @required
     * @maps Page
     */
    public function setPage(int $page): void
    {
        $this->page = $page;
    }

    /**
     * Returns Filters.
     */
    public function getFilters(): RecentTransactionReq
    {
        return $this->filters;
    }

    /**
     * Sets Filters.
     *
     * @required
     * @maps Filters
     */
    public function setFilters(RecentTransactionReq $filters): void
    {
        $this->filters = $filters;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['PageSize'] = $this->pageSize;
        $json['Page']     = $this->page;
        $json['Filters']  = $this->filters;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
