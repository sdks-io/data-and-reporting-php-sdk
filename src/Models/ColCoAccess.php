<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class ColCoAccess implements \JsonSerializable
{
    /**
     * @var array
     */
    private $colCoId = [];

    /**
     * @var array
     */
    private $colCoCode = [];

    /**
     * @var array
     */
    private $colCoCountryName = [];

    /**
     * @var array
     */
    private $issuingCountryNumber = [];

    /**
     * Returns Col Co Id.
     * Collecting company ID.
     */
    public function getColCoId(): ?string
    {
        if (count($this->colCoId) == 0) {
            return null;
        }
        return $this->colCoId['value'];
    }

    /**
     * Sets Col Co Id.
     * Collecting company ID.
     *
     * @maps ColCoId
     */
    public function setColCoId(?string $colCoId): void
    {
        $this->colCoId['value'] = $colCoId;
    }

    /**
     * Unsets Col Co Id.
     * Collecting company ID.
     */
    public function unsetColCoId(): void
    {
        $this->colCoId = [];
    }

    /**
     * Returns Col Co Code.
     * Collecting company code.
     */
    public function getColCoCode(): ?string
    {
        if (count($this->colCoCode) == 0) {
            return null;
        }
        return $this->colCoCode['value'];
    }

    /**
     * Sets Col Co Code.
     * Collecting company code.
     *
     * @maps ColCoCode
     */
    public function setColCoCode(?string $colCoCode): void
    {
        $this->colCoCode['value'] = $colCoCode;
    }

    /**
     * Unsets Col Co Code.
     * Collecting company code.
     */
    public function unsetColCoCode(): void
    {
        $this->colCoCode = [];
    }

    /**
     * Returns Col Co Country Name.
     * Collecting company’s Country name. ex: United Kingdom
     */
    public function getColCoCountryName(): ?string
    {
        if (count($this->colCoCountryName) == 0) {
            return null;
        }
        return $this->colCoCountryName['value'];
    }

    /**
     * Sets Col Co Country Name.
     * Collecting company’s Country name. ex: United Kingdom
     *
     * @maps ColCoCountryName
     */
    public function setColCoCountryName(?string $colCoCountryName): void
    {
        $this->colCoCountryName['value'] = $colCoCountryName;
    }

    /**
     * Unsets Col Co Country Name.
     * Collecting company’s Country name. ex: United Kingdom
     */
    public function unsetColCoCountryName(): void
    {
        $this->colCoCountryName = [];
    }

    /**
     * Returns Issuing Country Number.
     * Issuing Country Number.
     *
     * ex: 032 - Czech Republic
     */
    public function getIssuingCountryNumber(): ?string
    {
        if (count($this->issuingCountryNumber) == 0) {
            return null;
        }
        return $this->issuingCountryNumber['value'];
    }

    /**
     * Sets Issuing Country Number.
     * Issuing Country Number.
     *
     * ex: 032 - Czech Republic
     *
     * @maps IssuingCountryNumber
     */
    public function setIssuingCountryNumber(?string $issuingCountryNumber): void
    {
        $this->issuingCountryNumber['value'] = $issuingCountryNumber;
    }

    /**
     * Unsets Issuing Country Number.
     * Issuing Country Number.
     *
     * ex: 032 - Czech Republic
     */
    public function unsetIssuingCountryNumber(): void
    {
        $this->issuingCountryNumber = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->colCoId)) {
            $json['ColCoId']              = $this->colCoId['value'];
        }
        if (!empty($this->colCoCode)) {
            $json['ColCoCode']            = $this->colCoCode['value'];
        }
        if (!empty($this->colCoCountryName)) {
            $json['ColCoCountryName']     = $this->colCoCountryName['value'];
        }
        if (!empty($this->issuingCountryNumber)) {
            $json['IssuingCountryNumber'] = $this->issuingCountryNumber['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
