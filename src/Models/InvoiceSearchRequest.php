<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class InvoiceSearchRequest implements \JsonSerializable
{
    /**
     * @var InvoiceSearchRequestFilters|null
     */
    private $filters;

    /**
     * @var int|null
     */
    private $pageSize;

    /**
     * @var int|null
     */
    private $page;

    /**
     * @var int[]|null
     */
    private $sortBy;

    /**
     * Returns Filters.
     */
    public function getFilters(): ?InvoiceSearchRequestFilters
    {
        return $this->filters;
    }

    /**
     * Sets Filters.
     *
     * @maps Filters
     */
    public function setFilters(?InvoiceSearchRequestFilters $filters): void
    {
        $this->filters = $filters;
    }

    /**
     * Returns Page Size.
     */
    public function getPageSize(): ?int
    {
        return $this->pageSize;
    }

    /**
     * Sets Page Size.
     *
     * @maps PageSize
     */
    public function setPageSize(?int $pageSize): void
    {
        $this->pageSize = $pageSize;
    }

    /**
     * Returns Page.
     */
    public function getPage(): ?int
    {
        return $this->page;
    }

    /**
     * Sets Page.
     *
     * @maps Page
     */
    public function setPage(?int $page): void
    {
        $this->page = $page;
    }

    /**
     * Returns Sort By.
     * Sort option –
     *
     * 1.    InvoiceDate ASC
     *
     * 2.    InvoiceDate DESC
     *
     * 3.    NetAmountCustomerCurrency ASC
     *
     * 4.    NetAmountCustomerCurrency DESC
     *
     * Optional
     *
     * Note:
     *
     * This option uses a column name with a combination of “ASC or DESC” for sorting.
     *
     * If only the column name is provided, it is sorted by ascending.
     *
     * Example values to be passed:
     *
     * [“InvoiceDate”, “NetAmountCustomerCurrency DESC”]
     *
     * @return int[]|null
     */
    public function getSortBy(): ?array
    {
        return $this->sortBy;
    }

    /**
     * Sets Sort By.
     * Sort option –
     *
     * 1.    InvoiceDate ASC
     *
     * 2.    InvoiceDate DESC
     *
     * 3.    NetAmountCustomerCurrency ASC
     *
     * 4.    NetAmountCustomerCurrency DESC
     *
     * Optional
     *
     * Note:
     *
     * This option uses a column name with a combination of “ASC or DESC” for sorting.
     *
     * If only the column name is provided, it is sorted by ascending.
     *
     * Example values to be passed:
     *
     * [“InvoiceDate”, “NetAmountCustomerCurrency DESC”]
     *
     * @maps SortBy
     *
     * @param int[]|null $sortBy
     */
    public function setSortBy(?array $sortBy): void
    {
        $this->sortBy = $sortBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->filters)) {
            $json['Filters']  = $this->filters;
        }
        if (isset($this->pageSize)) {
            $json['PageSize'] = $this->pageSize;
        }
        if (isset($this->page)) {
            $json['Page']     = $this->page;
        }
        if (isset($this->sortBy)) {
            $json['SortBy']   = $this->sortBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
