<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class UpdateOdometer implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $salesItemId;

    /**
     * @var int|null
     */
    private $newOdometerValue;

    /**
     * Returns Sales Item Id.
     * Unique SalesItemId (Either Billed on Unbilled)
     * Mandatory
     */
    public function getSalesItemId(): ?string
    {
        return $this->salesItemId;
    }

    /**
     * Sets Sales Item Id.
     * Unique SalesItemId (Either Billed on Unbilled)
     * Mandatory
     *
     * @maps SalesItemId
     */
    public function setSalesItemId(?string $salesItemId): void
    {
        $this->salesItemId = $salesItemId;
    }

    /**
     * Returns New Odometer Value.
     * NewOdometerValue that needs to be updated
     */
    public function getNewOdometerValue(): ?int
    {
        return $this->newOdometerValue;
    }

    /**
     * Sets New Odometer Value.
     * NewOdometerValue that needs to be updated
     *
     * @maps NewOdometerValue
     */
    public function setNewOdometerValue(?int $newOdometerValue): void
    {
        $this->newOdometerValue = $newOdometerValue;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['SalesItemId']      = $this->salesItemId;
        $json['NewOdometerValue'] = $this->newOdometerValue;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
