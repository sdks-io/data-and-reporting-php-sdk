<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class Role implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $roleName;

    /**
     * @var bool|null
     */
    private $isCustomerAdmin = true;

    /**
     * @var bool|null
     */
    private $isCustomerUser = false;

    /**
     * @var bool|null
     */
    private $isShellAdmin = false;

    /**
     * @var bool|null
     */
    private $isServiceAccount = false;

    /**
     * @var bool|null
     */
    private $isUserAdmin = true;

    /**
     * Returns Role Name.
     * Role Name of the user
     */
    public function getRoleName(): ?string
    {
        return $this->roleName;
    }

    /**
     * Sets Role Name.
     * Role Name of the user
     *
     * @maps RoleName
     */
    public function setRoleName(?string $roleName): void
    {
        $this->roleName = $roleName;
    }

    /**
     * Returns Is Customer Admin.
     * Whether the role is an administrator.
     */
    public function getIsCustomerAdmin(): ?bool
    {
        return $this->isCustomerAdmin;
    }

    /**
     * Sets Is Customer Admin.
     * Whether the role is an administrator.
     *
     * @maps IsCustomerAdmin
     */
    public function setIsCustomerAdmin(?bool $isCustomerAdmin): void
    {
        $this->isCustomerAdmin = $isCustomerAdmin;
    }

    /**
     * Returns Is Customer User.
     * Whether the role is a customer user.
     */
    public function getIsCustomerUser(): ?bool
    {
        return $this->isCustomerUser;
    }

    /**
     * Sets Is Customer User.
     * Whether the role is a customer user.
     *
     * @maps IsCustomerUser
     */
    public function setIsCustomerUser(?bool $isCustomerUser): void
    {
        $this->isCustomerUser = $isCustomerUser;
    }

    /**
     * Returns Is Shell Admin.
     * True if the role is Shell user, else false.
     */
    public function getIsShellAdmin(): ?bool
    {
        return $this->isShellAdmin;
    }

    /**
     * Sets Is Shell Admin.
     * True if the role is Shell user, else false.
     *
     * @maps IsShellAdmin
     */
    public function setIsShellAdmin(?bool $isShellAdmin): void
    {
        $this->isShellAdmin = $isShellAdmin;
    }

    /**
     * Returns Is Service Account.
     * True/False.
     * True if the role is Service accounts, else false.
     */
    public function getIsServiceAccount(): ?bool
    {
        return $this->isServiceAccount;
    }

    /**
     * Sets Is Service Account.
     * True/False.
     * True if the role is Service accounts, else false.
     *
     * @maps IsServiceAccount
     */
    public function setIsServiceAccount(?bool $isServiceAccount): void
    {
        $this->isServiceAccount = $isServiceAccount;
    }

    /**
     * Returns Is User Admin.
     * True/False.
     * True, if the role allows user administration, else false.
     */
    public function getIsUserAdmin(): ?bool
    {
        return $this->isUserAdmin;
    }

    /**
     * Sets Is User Admin.
     * True/False.
     * True, if the role allows user administration, else false.
     *
     * @maps IsUserAdmin
     */
    public function setIsUserAdmin(?bool $isUserAdmin): void
    {
        $this->isUserAdmin = $isUserAdmin;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->roleName)) {
            $json['RoleName']         = $this->roleName;
        }
        if (isset($this->isCustomerAdmin)) {
            $json['IsCustomerAdmin']  = $this->isCustomerAdmin;
        }
        if (isset($this->isCustomerUser)) {
            $json['IsCustomerUser']   = $this->isCustomerUser;
        }
        if (isset($this->isShellAdmin)) {
            $json['IsShellAdmin']     = $this->isShellAdmin;
        }
        if (isset($this->isServiceAccount)) {
            $json['IsServiceAccount'] = $this->isServiceAccount;
        }
        if (isset($this->isUserAdmin)) {
            $json['IsUserAdmin']      = $this->isUserAdmin;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
