<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models;

use stdClass;

class PricingCurrentVolume implements \JsonSerializable
{
    /**
     * @var array
     */
    private $feeRuleId = [];

    /**
     * @var array
     */
    private $feeRuleDescription = [];

    /**
     * @var array
     */
    private $priceRuleID = [];

    /**
     * @var array
     */
    private $priceRuleDescription = [];

    /**
     * @var array
     */
    private $totalVolume = [];

    /**
     * @var array
     */
    private $nextFeeCreationDate = [];

    /**
     * Returns Fee Rule Id.
     * Bonus or association bonus configuration identifier  that is associated to the payer.
     */
    public function getFeeRuleId(): ?int
    {
        if (count($this->feeRuleId) == 0) {
            return null;
        }
        return $this->feeRuleId['value'];
    }

    /**
     * Sets Fee Rule Id.
     * Bonus or association bonus configuration identifier  that is associated to the payer.
     *
     * @maps FeeRuleId
     */
    public function setFeeRuleId(?int $feeRuleId): void
    {
        $this->feeRuleId['value'] = $feeRuleId;
    }

    /**
     * Unsets Fee Rule Id.
     * Bonus or association bonus configuration identifier  that is associated to the payer.
     */
    public function unsetFeeRuleId(): void
    {
        $this->feeRuleId = [];
    }

    /**
     * Returns Fee Rule Description.
     * Bonus or association bonus configuration description that is associated to the payer
     */
    public function getFeeRuleDescription(): ?string
    {
        if (count($this->feeRuleDescription) == 0) {
            return null;
        }
        return $this->feeRuleDescription['value'];
    }

    /**
     * Sets Fee Rule Description.
     * Bonus or association bonus configuration description that is associated to the payer
     *
     * @maps FeeRuleDescription
     */
    public function setFeeRuleDescription(?string $feeRuleDescription): void
    {
        $this->feeRuleDescription['value'] = $feeRuleDescription;
    }

    /**
     * Unsets Fee Rule Description.
     * Bonus or association bonus configuration description that is associated to the payer
     */
    public function unsetFeeRuleDescription(): void
    {
        $this->feeRuleDescription = [];
    }

    /**
     * Returns Price Rule ID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     */
    public function getPriceRuleID(): ?int
    {
        if (count($this->priceRuleID) == 0) {
            return null;
        }
        return $this->priceRuleID['value'];
    }

    /**
     * Sets Price Rule ID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     *
     * @maps PriceRuleID
     */
    public function setPriceRuleID(?int $priceRuleID): void
    {
        $this->priceRuleID['value'] = $priceRuleID;
    }

    /**
     * Unsets Price Rule ID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     */
    public function unsetPriceRuleID(): void
    {
        $this->priceRuleID = [];
    }

    /**
     * Returns Price Rule Description.
     * Pricing current period pricing rule description that is associated to the payer
     */
    public function getPriceRuleDescription(): ?string
    {
        if (count($this->priceRuleDescription) == 0) {
            return null;
        }
        return $this->priceRuleDescription['value'];
    }

    /**
     * Sets Price Rule Description.
     * Pricing current period pricing rule description that is associated to the payer
     *
     * @maps PriceRuleDescription
     */
    public function setPriceRuleDescription(?string $priceRuleDescription): void
    {
        $this->priceRuleDescription['value'] = $priceRuleDescription;
    }

    /**
     * Unsets Price Rule Description.
     * Pricing current period pricing rule description that is associated to the payer
     */
    public function unsetPriceRuleDescription(): void
    {
        $this->priceRuleDescription = [];
    }

    /**
     * Returns Total Volume.
     * Total volume consumption for the current period.
     */
    public function getTotalVolume(): ?float
    {
        if (count($this->totalVolume) == 0) {
            return null;
        }
        return $this->totalVolume['value'];
    }

    /**
     * Sets Total Volume.
     * Total volume consumption for the current period.
     *
     * @maps TotalVolume
     */
    public function setTotalVolume(?float $totalVolume): void
    {
        $this->totalVolume['value'] = $totalVolume;
    }

    /**
     * Unsets Total Volume.
     * Total volume consumption for the current period.
     */
    public function unsetTotalVolume(): void
    {
        $this->totalVolume = [];
    }

    /**
     * Returns Next Fee Creation Date.
     * Next Fee Rule Creation Date for that is associated to the payer.
     * Format: YYYYMMDD
     */
    public function getNextFeeCreationDate(): ?string
    {
        if (count($this->nextFeeCreationDate) == 0) {
            return null;
        }
        return $this->nextFeeCreationDate['value'];
    }

    /**
     * Sets Next Fee Creation Date.
     * Next Fee Rule Creation Date for that is associated to the payer.
     * Format: YYYYMMDD
     *
     * @maps NextFeeCreationDate
     */
    public function setNextFeeCreationDate(?string $nextFeeCreationDate): void
    {
        $this->nextFeeCreationDate['value'] = $nextFeeCreationDate;
    }

    /**
     * Unsets Next Fee Creation Date.
     * Next Fee Rule Creation Date for that is associated to the payer.
     * Format: YYYYMMDD
     */
    public function unsetNextFeeCreationDate(): void
    {
        $this->nextFeeCreationDate = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->feeRuleId)) {
            $json['FeeRuleId']            = $this->feeRuleId['value'];
        }
        if (!empty($this->feeRuleDescription)) {
            $json['FeeRuleDescription']   = $this->feeRuleDescription['value'];
        }
        if (!empty($this->priceRuleID)) {
            $json['PriceRuleID']          = $this->priceRuleID['value'];
        }
        if (!empty($this->priceRuleDescription)) {
            $json['PriceRuleDescription'] = $this->priceRuleDescription['value'];
        }
        if (!empty($this->totalVolume)) {
            $json['TotalVolume']          = $this->totalVolume['value'];
        }
        if (!empty($this->nextFeeCreationDate)) {
            $json['NextFeeCreationDate']  = $this->nextFeeCreationDate['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
