<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\CardExceptions;

/**
 * Builder for model CardExceptions
 *
 * @see CardExceptions
 */
class CardExceptionsBuilder
{
    /**
     * @var CardExceptions
     */
    private $instance;

    private function __construct(CardExceptions $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new card exceptions Builder object.
     */
    public static function init(): self
    {
        return new self(new CardExceptions());
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Unsets account id field.
     */
    public function unsetAccountId(): self
    {
        $this->instance->unsetAccountId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets account short name field.
     */
    public function accountShortName(?string $value): self
    {
        $this->instance->setAccountShortName($value);
        return $this;
    }

    /**
     * Unsets account short name field.
     */
    public function unsetAccountShortName(): self
    {
        $this->instance->unsetAccountShortName();
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Unsets card id field.
     */
    public function unsetCardId(): self
    {
        $this->instance->unsetCardId();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets day field.
     */
    public function day(?int $value): self
    {
        $this->instance->setDay($value);
        return $this;
    }

    /**
     * Unsets day field.
     */
    public function unsetDay(): self
    {
        $this->instance->unsetDay();
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?string $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Unsets driver name field.
     */
    public function unsetDriverName(): self
    {
        $this->instance->unsetDriverName();
        return $this;
    }

    /**
     * Sets month field.
     */
    public function month(?int $value): self
    {
        $this->instance->setMonth($value);
        return $this;
    }

    /**
     * Unsets month field.
     */
    public function unsetMonth(): self
    {
        $this->instance->unsetMonth();
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Unsets pan field.
     */
    public function unsetPAN(): self
    {
        $this->instance->unsetPAN();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payer short name field.
     */
    public function payerShortName(?string $value): self
    {
        $this->instance->setPayerShortName($value);
        return $this;
    }

    /**
     * Unsets payer short name field.
     */
    public function unsetPayerShortName(): self
    {
        $this->instance->unsetPayerShortName();
        return $this;
    }

    /**
     * Sets total amount field.
     */
    public function totalAmount(?float $value): self
    {
        $this->instance->setTotalAmount($value);
        return $this;
    }

    /**
     * Unsets total amount field.
     */
    public function unsetTotalAmount(): self
    {
        $this->instance->unsetTotalAmount();
        return $this;
    }

    /**
     * Sets total quantity field.
     */
    public function totalQuantity(?int $value): self
    {
        $this->instance->setTotalQuantity($value);
        return $this;
    }

    /**
     * Unsets total quantity field.
     */
    public function unsetTotalQuantity(): self
    {
        $this->instance->unsetTotalQuantity();
        return $this;
    }

    /**
     * Sets total sales items field.
     */
    public function totalSalesItems(?int $value): self
    {
        $this->instance->setTotalSalesItems($value);
        return $this;
    }

    /**
     * Unsets total sales items field.
     */
    public function unsetTotalSalesItems(): self
    {
        $this->instance->unsetTotalSalesItems();
        return $this;
    }

    /**
     * Sets total transactions field.
     */
    public function totalTransactions(?int $value): self
    {
        $this->instance->setTotalTransactions($value);
        return $this;
    }

    /**
     * Unsets total transactions field.
     */
    public function unsetTotalTransactions(): self
    {
        $this->instance->unsetTotalTransactions();
        return $this;
    }

    /**
     * Sets vrn field.
     */
    public function vRN(?string $value): self
    {
        $this->instance->setVRN($value);
        return $this;
    }

    /**
     * Unsets vrn field.
     */
    public function unsetVRN(): self
    {
        $this->instance->unsetVRN();
        return $this;
    }

    /**
     * Sets week field.
     */
    public function week(?int $value): self
    {
        $this->instance->setWeek($value);
        return $this;
    }

    /**
     * Unsets week field.
     */
    public function unsetWeek(): self
    {
        $this->instance->unsetWeek();
        return $this;
    }

    /**
     * Sets year field.
     */
    public function year(?int $value): self
    {
        $this->instance->setYear($value);
        return $this;
    }

    /**
     * Unsets year field.
     */
    public function unsetYear(): self
    {
        $this->instance->unsetYear();
        return $this;
    }

    /**
     * Initializes a new card exceptions object.
     */
    public function build(): CardExceptions
    {
        return CoreHelper::clone($this->instance);
    }
}
