<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\LastStatementOfAccount2;

/**
 * Builder for model LastStatementOfAccount2
 *
 * @see LastStatementOfAccount2
 */
class LastStatementOfAccount2Builder
{
    /**
     * @var LastStatementOfAccount2
     */
    private $instance;

    private function __construct(LastStatementOfAccount2 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new last statement of account 2 Builder object.
     */
    public static function init(): self
    {
        return new self(new LastStatementOfAccount2());
    }

    /**
     * Sets amount due field.
     */
    public function amountDue(?float $value): self
    {
        $this->instance->setAmountDue($value);
        return $this;
    }

    /**
     * Unsets amount due field.
     */
    public function unsetAmountDue(): self
    {
        $this->instance->unsetAmountDue();
        return $this;
    }

    /**
     * Sets amount not overdue field.
     */
    public function amountNotOverdue(?float $value): self
    {
        $this->instance->setAmountNotOverdue($value);
        return $this;
    }

    /**
     * Unsets amount not overdue field.
     */
    public function unsetAmountNotOverdue(): self
    {
        $this->instance->unsetAmountNotOverdue();
        return $this;
    }

    /**
     * Sets amount overdue field.
     */
    public function amountOverdue(?float $value): self
    {
        $this->instance->setAmountOverdue($value);
        return $this;
    }

    /**
     * Unsets amount overdue field.
     */
    public function unsetAmountOverdue(): self
    {
        $this->instance->unsetAmountOverdue();
        return $this;
    }

    /**
     * Sets credit limit field.
     */
    public function creditLimit(?int $value): self
    {
        $this->instance->setCreditLimit($value);
        return $this;
    }

    /**
     * Unsets credit limit field.
     */
    public function unsetCreditLimit(): self
    {
        $this->instance->unsetCreditLimit();
        return $this;
    }

    /**
     * Sets credit limit currency code field.
     */
    public function creditLimitCurrencyCode(?string $value): self
    {
        $this->instance->setCreditLimitCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets credit limit currency code field.
     */
    public function unsetCreditLimitCurrencyCode(): self
    {
        $this->instance->unsetCreditLimitCurrencyCode();
        return $this;
    }

    /**
     * Sets credit limit currency symbol field.
     */
    public function creditLimitCurrencySymbol(?string $value): self
    {
        $this->instance->setCreditLimitCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets credit limit currency symbol field.
     */
    public function unsetCreditLimitCurrencySymbol(): self
    {
        $this->instance->unsetCreditLimitCurrencySymbol();
        return $this;
    }

    /**
     * Sets credit limit in customer currency field.
     */
    public function creditLimitInCustomerCurrency(?float $value): self
    {
        $this->instance->setCreditLimitInCustomerCurrency($value);
        return $this;
    }

    /**
     * Unsets credit limit in customer currency field.
     */
    public function unsetCreditLimitInCustomerCurrency(): self
    {
        $this->instance->unsetCreditLimitInCustomerCurrency();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets last payment currency code field.
     */
    public function lastPaymentCurrencyCode(?string $value): self
    {
        $this->instance->setLastPaymentCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets last payment currency code field.
     */
    public function unsetLastPaymentCurrencyCode(): self
    {
        $this->instance->unsetLastPaymentCurrencyCode();
        return $this;
    }

    /**
     * Sets last payment currency symbol field.
     */
    public function lastPaymentCurrencySymbol(?string $value): self
    {
        $this->instance->setLastPaymentCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets last payment currency symbol field.
     */
    public function unsetLastPaymentCurrencySymbol(): self
    {
        $this->instance->unsetLastPaymentCurrencySymbol();
        return $this;
    }

    /**
     * Sets last payment date field.
     */
    public function lastPaymentDate(?string $value): self
    {
        $this->instance->setLastPaymentDate($value);
        return $this;
    }

    /**
     * Unsets last payment date field.
     */
    public function unsetLastPaymentDate(): self
    {
        $this->instance->unsetLastPaymentDate();
        return $this;
    }

    /**
     * Sets last payment value field.
     */
    public function lastPaymentValue(?float $value): self
    {
        $this->instance->setLastPaymentValue($value);
        return $this;
    }

    /**
     * Unsets last payment value field.
     */
    public function unsetLastPaymentValue(): self
    {
        $this->instance->unsetLastPaymentValue();
        return $this;
    }

    /**
     * Sets outstanding balance field.
     */
    public function outstandingBalance(?float $value): self
    {
        $this->instance->setOutstandingBalance($value);
        return $this;
    }

    /**
     * Unsets outstanding balance field.
     */
    public function unsetOutstandingBalance(): self
    {
        $this->instance->unsetOutstandingBalance();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payment due date field.
     */
    public function paymentDueDate(?string $value): self
    {
        $this->instance->setPaymentDueDate($value);
        return $this;
    }

    /**
     * Unsets payment due date field.
     */
    public function unsetPaymentDueDate(): self
    {
        $this->instance->unsetPaymentDueDate();
        return $this;
    }

    /**
     * Sets payment method field.
     */
    public function paymentMethod(?string $value): self
    {
        $this->instance->setPaymentMethod($value);
        return $this;
    }

    /**
     * Unsets payment method field.
     */
    public function unsetPaymentMethod(): self
    {
        $this->instance->unsetPaymentMethod();
        return $this;
    }

    /**
     * Sets payment method id field.
     */
    public function paymentMethodId(?int $value): self
    {
        $this->instance->setPaymentMethodId($value);
        return $this;
    }

    /**
     * Unsets payment method id field.
     */
    public function unsetPaymentMethodId(): self
    {
        $this->instance->unsetPaymentMethodId();
        return $this;
    }

    /**
     * Sets payment terms field.
     */
    public function paymentTerms(?string $value): self
    {
        $this->instance->setPaymentTerms($value);
        return $this;
    }

    /**
     * Unsets payment terms field.
     */
    public function unsetPaymentTerms(): self
    {
        $this->instance->unsetPaymentTerms();
        return $this;
    }

    /**
     * Sets payment terms id field.
     */
    public function paymentTermsId(?int $value): self
    {
        $this->instance->setPaymentTermsId($value);
        return $this;
    }

    /**
     * Unsets payment terms id field.
     */
    public function unsetPaymentTermsId(): self
    {
        $this->instance->unsetPaymentTermsId();
        return $this;
    }

    /**
     * Sets so areference number field.
     */
    public function soAReferenceNumber(?string $value): self
    {
        $this->instance->setSoAReferenceNumber($value);
        return $this;
    }

    /**
     * Unsets so areference number field.
     */
    public function unsetSoAReferenceNumber(): self
    {
        $this->instance->unsetSoAReferenceNumber();
        return $this;
    }

    /**
     * Sets statement date field.
     */
    public function statementDate(?string $value): self
    {
        $this->instance->setStatementDate($value);
        return $this;
    }

    /**
     * Unsets statement date field.
     */
    public function unsetStatementDate(): self
    {
        $this->instance->unsetStatementDate();
        return $this;
    }

    /**
     * Sets statement of account id field.
     */
    public function statementOfAccountId(?int $value): self
    {
        $this->instance->setStatementOfAccountId($value);
        return $this;
    }

    /**
     * Unsets statement of account id field.
     */
    public function unsetStatementOfAccountId(): self
    {
        $this->instance->unsetStatementOfAccountId();
        return $this;
    }

    /**
     * Sets total billing documents field.
     */
    public function totalBillingDocuments(?int $value): self
    {
        $this->instance->setTotalBillingDocuments($value);
        return $this;
    }

    /**
     * Unsets total billing documents field.
     */
    public function unsetTotalBillingDocuments(): self
    {
        $this->instance->unsetTotalBillingDocuments();
        return $this;
    }

    /**
     * Sets total summary billing documents field.
     */
    public function totalSummaryBillingDocuments(?int $value): self
    {
        $this->instance->setTotalSummaryBillingDocuments($value);
        return $this;
    }

    /**
     * Unsets total summary billing documents field.
     */
    public function unsetTotalSummaryBillingDocuments(): self
    {
        $this->instance->unsetTotalSummaryBillingDocuments();
        return $this;
    }

    /**
     * Sets unallocated payment field.
     */
    public function unallocatedPayment(?int $value): self
    {
        $this->instance->setUnallocatedPayment($value);
        return $this;
    }

    /**
     * Unsets unallocated payment field.
     */
    public function unsetUnallocatedPayment(): self
    {
        $this->instance->unsetUnallocatedPayment();
        return $this;
    }

    /**
     * Initializes a new last statement of account 2 object.
     */
    public function build(): LastStatementOfAccount2
    {
        return CoreHelper::clone($this->instance);
    }
}
