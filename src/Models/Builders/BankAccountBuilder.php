<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\BankAccount;

/**
 * Builder for model BankAccount
 *
 * @see BankAccount
 */
class BankAccountBuilder
{
    /**
     * @var BankAccount
     */
    private $instance;

    private function __construct(BankAccount $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new bank account Builder object.
     */
    public static function init(): self
    {
        return new self(new BankAccount());
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets bank name field.
     */
    public function bankName(?string $value): self
    {
        $this->instance->setBankName($value);
        return $this;
    }

    /**
     * Unsets bank name field.
     */
    public function unsetBankName(): self
    {
        $this->instance->unsetBankName();
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Unsets account name field.
     */
    public function unsetAccountName(): self
    {
        $this->instance->unsetAccountName();
        return $this;
    }

    /**
     * Sets date effective field.
     */
    public function dateEffective(?string $value): self
    {
        $this->instance->setDateEffective($value);
        return $this;
    }

    /**
     * Unsets date effective field.
     */
    public function unsetDateEffective(): self
    {
        $this->instance->unsetDateEffective();
        return $this;
    }

    /**
     * Sets date terminated field.
     */
    public function dateTerminated(?string $value): self
    {
        $this->instance->setDateTerminated($value);
        return $this;
    }

    /**
     * Unsets date terminated field.
     */
    public function unsetDateTerminated(): self
    {
        $this->instance->unsetDateTerminated();
        return $this;
    }

    /**
     * Sets iban field.
     */
    public function iBAN(?string $value): self
    {
        $this->instance->setIBAN($value);
        return $this;
    }

    /**
     * Unsets iban field.
     */
    public function unsetIBAN(): self
    {
        $this->instance->unsetIBAN();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets country isocode field.
     */
    public function countryISOCode(?string $value): self
    {
        $this->instance->setCountryISOCode($value);
        return $this;
    }

    /**
     * Unsets country isocode field.
     */
    public function unsetCountryISOCode(): self
    {
        $this->instance->unsetCountryISOCode();
        return $this;
    }

    /**
     * Sets country field.
     */
    public function country(?string $value): self
    {
        $this->instance->setCountry($value);
        return $this;
    }

    /**
     * Unsets country field.
     */
    public function unsetCountry(): self
    {
        $this->instance->unsetCountry();
        return $this;
    }

    /**
     * Sets sort code field.
     */
    public function sortCode(?string $value): self
    {
        $this->instance->setSortCode($value);
        return $this;
    }

    /**
     * Unsets sort code field.
     */
    public function unsetSortCode(): self
    {
        $this->instance->unsetSortCode();
        return $this;
    }

    /**
     * Sets swift code field.
     */
    public function swiftCode(?string $value): self
    {
        $this->instance->setSwiftCode($value);
        return $this;
    }

    /**
     * Unsets swift code field.
     */
    public function unsetSwiftCode(): self
    {
        $this->instance->unsetSwiftCode();
        return $this;
    }

    /**
     * Sets bank type field.
     */
    public function bankType(?string $value): self
    {
        $this->instance->setBankType($value);
        return $this;
    }

    /**
     * Unsets bank type field.
     */
    public function unsetBankType(): self
    {
        $this->instance->unsetBankType();
        return $this;
    }

    /**
     * Initializes a new bank account object.
     */
    public function build(): BankAccount
    {
        return CoreHelper::clone($this->instance);
    }
}
