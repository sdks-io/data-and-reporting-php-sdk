<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\AccountRequest;

/**
 * Builder for model AccountRequest
 *
 * @see AccountRequest
 */
class AccountRequestBuilder
{
    /**
     * @var AccountRequest
     */
    private $instance;

    private function __construct(AccountRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new account request Builder object.
     */
    public static function init(): self
    {
        return new self(new AccountRequest());
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Unsets status field.
     */
    public function unsetStatus(): self
    {
        $this->instance->unsetStatus();
        return $this;
    }

    /**
     * Sets include card summary field.
     */
    public function includeCardSummary(?bool $value): self
    {
        $this->instance->setIncludeCardSummary($value);
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets page size field.
     */
    public function pageSize(?int $value): self
    {
        $this->instance->setPageSize($value);
        return $this;
    }

    /**
     * Unsets page size field.
     */
    public function unsetPageSize(): self
    {
        $this->instance->unsetPageSize();
        return $this;
    }

    /**
     * Sets request id field.
     */
    public function requestId(?string $value): self
    {
        $this->instance->setRequestId($value);
        return $this;
    }

    /**
     * Unsets request id field.
     */
    public function unsetRequestId(): self
    {
        $this->instance->unsetRequestId();
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets current page field.
     */
    public function currentPage(?int $value): self
    {
        $this->instance->setCurrentPage($value);
        return $this;
    }

    /**
     * Unsets current page field.
     */
    public function unsetCurrentPage(): self
    {
        $this->instance->unsetCurrentPage();
        return $this;
    }

    /**
     * Sets invoice points only field.
     */
    public function invoicePointsOnly(?bool $value): self
    {
        $this->instance->setInvoicePointsOnly($value);
        return $this;
    }

    /**
     * Unsets invoice points only field.
     */
    public function unsetInvoicePointsOnly(): self
    {
        $this->instance->unsetInvoicePointsOnly();
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets return tolls customer id field.
     */
    public function returnTollsCustomerId(?bool $value): self
    {
        $this->instance->setReturnTollsCustomerId($value);
        return $this;
    }

    /**
     * Sets accounts field.
     */
    public function accounts(?array $value): self
    {
        $this->instance->setAccounts($value);
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Unsets account name field.
     */
    public function unsetAccountName(): self
    {
        $this->instance->unsetAccountName();
        return $this;
    }

    /**
     * Sets status list field.
     */
    public function statusList(?array $value): self
    {
        $this->instance->setStatusList($value);
        return $this;
    }

    /**
     * Initializes a new account request object.
     */
    public function build(): AccountRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
