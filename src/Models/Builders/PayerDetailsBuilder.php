<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\Address;
use ShellDataReportingAPIsLib\Models\FinanceCurrency2;
use ShellDataReportingAPIsLib\Models\PayerDetails;

/**
 * Builder for model PayerDetails
 *
 * @see PayerDetails
 */
class PayerDetailsBuilder
{
    /**
     * @var PayerDetails
     */
    private $instance;

    private function __construct(PayerDetails $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new payer details Builder object.
     */
    public static function init(): self
    {
        return new self(new PayerDetails());
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets country code field.
     */
    public function countryCode(?string $value): self
    {
        $this->instance->setCountryCode($value);
        return $this;
    }

    /**
     * Unsets country code field.
     */
    public function unsetCountryCode(): self
    {
        $this->instance->unsetCountryCode();
        return $this;
    }

    /**
     * Sets country field.
     */
    public function country(?string $value): self
    {
        $this->instance->setCountry($value);
        return $this;
    }

    /**
     * Unsets country field.
     */
    public function unsetCountry(): self
    {
        $this->instance->unsetCountry();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payer full name field.
     */
    public function payerFullName(?string $value): self
    {
        $this->instance->setPayerFullName($value);
        return $this;
    }

    /**
     * Unsets payer full name field.
     */
    public function unsetPayerFullName(): self
    {
        $this->instance->unsetPayerFullName();
        return $this;
    }

    /**
     * Sets payer short name field.
     */
    public function payerShortName(?string $value): self
    {
        $this->instance->setPayerShortName($value);
        return $this;
    }

    /**
     * Unsets payer short name field.
     */
    public function unsetPayerShortName(): self
    {
        $this->instance->unsetPayerShortName();
        return $this;
    }

    /**
     * Sets payer group id field.
     */
    public function payerGroupId(?int $value): self
    {
        $this->instance->setPayerGroupId($value);
        return $this;
    }

    /**
     * Unsets payer group id field.
     */
    public function unsetPayerGroupId(): self
    {
        $this->instance->unsetPayerGroupId();
        return $this;
    }

    /**
     * Sets amount due field.
     */
    public function amountDue(?float $value): self
    {
        $this->instance->setAmountDue($value);
        return $this;
    }

    /**
     * Unsets amount due field.
     */
    public function unsetAmountDue(): self
    {
        $this->instance->unsetAmountDue();
        return $this;
    }

    /**
     * Sets amount overdue field.
     */
    public function amountOverdue(?float $value): self
    {
        $this->instance->setAmountOverdue($value);
        return $this;
    }

    /**
     * Unsets amount overdue field.
     */
    public function unsetAmountOverdue(): self
    {
        $this->instance->unsetAmountOverdue();
        return $this;
    }

    /**
     * Sets amount not overdue field.
     */
    public function amountNotOverdue(?float $value): self
    {
        $this->instance->setAmountNotOverdue($value);
        return $this;
    }

    /**
     * Unsets amount not overdue field.
     */
    public function unsetAmountNotOverdue(): self
    {
        $this->instance->unsetAmountNotOverdue();
        return $this;
    }

    /**
     * Sets outstanding balance field.
     */
    public function outstandingBalance(?float $value): self
    {
        $this->instance->setOutstandingBalance($value);
        return $this;
    }

    /**
     * Unsets outstanding balance field.
     */
    public function unsetOutstandingBalance(): self
    {
        $this->instance->unsetOutstandingBalance();
        return $this;
    }

    /**
     * Sets unallocated payment field.
     */
    public function unallocatedPayment(?float $value): self
    {
        $this->instance->setUnallocatedPayment($value);
        return $this;
    }

    /**
     * Unsets unallocated payment field.
     */
    public function unsetUnallocatedPayment(): self
    {
        $this->instance->unsetUnallocatedPayment();
        return $this;
    }

    /**
     * Sets soacurrency code field.
     */
    public function sOACurrencyCode(?string $value): self
    {
        $this->instance->setSOACurrencyCode($value);
        return $this;
    }

    /**
     * Unsets soacurrency code field.
     */
    public function unsetSOACurrencyCode(): self
    {
        $this->instance->unsetSOACurrencyCode();
        return $this;
    }

    /**
     * Sets soacurrency symbol field.
     */
    public function sOACurrencySymbol(?string $value): self
    {
        $this->instance->setSOACurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets soacurrency symbol field.
     */
    public function unsetSOACurrencySymbol(): self
    {
        $this->instance->unsetSOACurrencySymbol();
        return $this;
    }

    /**
     * Sets soacredit limit currency code field.
     */
    public function sOACreditLimitCurrencyCode(?string $value): self
    {
        $this->instance->setSOACreditLimitCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets soacredit limit currency code field.
     */
    public function unsetSOACreditLimitCurrencyCode(): self
    {
        $this->instance->unsetSOACreditLimitCurrencyCode();
        return $this;
    }

    /**
     * Sets soacredit limit currency symbol field.
     */
    public function sOACreditLimitCurrencySymbol(?string $value): self
    {
        $this->instance->setSOACreditLimitCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets soacredit limit currency symbol field.
     */
    public function unsetSOACreditLimitCurrencySymbol(): self
    {
        $this->instance->unsetSOACreditLimitCurrencySymbol();
        return $this;
    }

    /**
     * Sets last payment currency code field.
     */
    public function lastPaymentCurrencyCode(?string $value): self
    {
        $this->instance->setLastPaymentCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets last payment currency code field.
     */
    public function unsetLastPaymentCurrencyCode(): self
    {
        $this->instance->unsetLastPaymentCurrencyCode();
        return $this;
    }

    /**
     * Sets last payment currency symbol field.
     */
    public function lastPaymentCurrencySymbol(?string $value): self
    {
        $this->instance->setLastPaymentCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets last payment currency symbol field.
     */
    public function unsetLastPaymentCurrencySymbol(): self
    {
        $this->instance->unsetLastPaymentCurrencySymbol();
        return $this;
    }

    /**
     * Sets last payment amount field.
     */
    public function lastPaymentAmount(?float $value): self
    {
        $this->instance->setLastPaymentAmount($value);
        return $this;
    }

    /**
     * Unsets last payment amount field.
     */
    public function unsetLastPaymentAmount(): self
    {
        $this->instance->unsetLastPaymentAmount();
        return $this;
    }

    /**
     * Sets last payment date field.
     */
    public function lastPaymentDate(?string $value): self
    {
        $this->instance->setLastPaymentDate($value);
        return $this;
    }

    /**
     * Unsets last payment date field.
     */
    public function unsetLastPaymentDate(): self
    {
        $this->instance->unsetLastPaymentDate();
        return $this;
    }

    /**
     * Sets soalast payment amount field.
     */
    public function sOALastPaymentAmount(?float $value): self
    {
        $this->instance->setSOALastPaymentAmount($value);
        return $this;
    }

    /**
     * Unsets soalast payment amount field.
     */
    public function unsetSOALastPaymentAmount(): self
    {
        $this->instance->unsetSOALastPaymentAmount();
        return $this;
    }

    /**
     * Sets soalast payment date field.
     */
    public function sOALastPaymentDate(?string $value): self
    {
        $this->instance->setSOALastPaymentDate($value);
        return $this;
    }

    /**
     * Unsets soalast payment date field.
     */
    public function unsetSOALastPaymentDate(): self
    {
        $this->instance->unsetSOALastPaymentDate();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets local currency code field.
     */
    public function localCurrencyCode(?string $value): self
    {
        $this->instance->setLocalCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets local currency code field.
     */
    public function unsetLocalCurrencyCode(): self
    {
        $this->instance->unsetLocalCurrencyCode();
        return $this;
    }

    /**
     * Sets local currency symbol field.
     */
    public function localCurrencySymbol(?string $value): self
    {
        $this->instance->setLocalCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets local currency symbol field.
     */
    public function unsetLocalCurrencySymbol(): self
    {
        $this->instance->unsetLocalCurrencySymbol();
        return $this;
    }

    /**
     * Sets local currency exchange rate field.
     */
    public function localCurrencyExchangeRate(?float $value): self
    {
        $this->instance->setLocalCurrencyExchangeRate($value);
        return $this;
    }

    /**
     * Unsets local currency exchange rate field.
     */
    public function unsetLocalCurrencyExchangeRate(): self
    {
        $this->instance->unsetLocalCurrencyExchangeRate();
        return $this;
    }

    /**
     * Sets local currency exchange rate so a field.
     */
    public function localCurrencyExchangeRateSoA(?float $value): self
    {
        $this->instance->setLocalCurrencyExchangeRateSoA($value);
        return $this;
    }

    /**
     * Unsets local currency exchange rate so a field.
     */
    public function unsetLocalCurrencyExchangeRateSoA(): self
    {
        $this->instance->unsetLocalCurrencyExchangeRateSoA();
        return $this;
    }

    /**
     * Sets billing frequency type id field.
     */
    public function billingFrequencyTypeId(?int $value): self
    {
        $this->instance->setBillingFrequencyTypeId($value);
        return $this;
    }

    /**
     * Unsets billing frequency type id field.
     */
    public function unsetBillingFrequencyTypeId(): self
    {
        $this->instance->unsetBillingFrequencyTypeId();
        return $this;
    }

    /**
     * Sets billing frequency type field.
     */
    public function billingFrequencyType(?string $value): self
    {
        $this->instance->setBillingFrequencyType($value);
        return $this;
    }

    /**
     * Unsets billing frequency type field.
     */
    public function unsetBillingFrequencyType(): self
    {
        $this->instance->unsetBillingFrequencyType();
        return $this;
    }

    /**
     * Sets billing run frequency type id field.
     */
    public function billingRunFrequencyTypeId(?int $value): self
    {
        $this->instance->setBillingRunFrequencyTypeId($value);
        return $this;
    }

    /**
     * Unsets billing run frequency type id field.
     */
    public function unsetBillingRunFrequencyTypeId(): self
    {
        $this->instance->unsetBillingRunFrequencyTypeId();
        return $this;
    }

    /**
     * Sets billing run frequnecy field.
     */
    public function billingRunFrequnecy(?string $value): self
    {
        $this->instance->setBillingRunFrequnecy($value);
        return $this;
    }

    /**
     * Unsets billing run frequnecy field.
     */
    public function unsetBillingRunFrequnecy(): self
    {
        $this->instance->unsetBillingRunFrequnecy();
        return $this;
    }

    /**
     * Sets day 1 run field.
     */
    public function day1Run(?int $value): self
    {
        $this->instance->setDay1Run($value);
        return $this;
    }

    /**
     * Unsets day 1 run field.
     */
    public function unsetDay1Run(): self
    {
        $this->instance->unsetDay1Run();
        return $this;
    }

    /**
     * Sets day 2 run field.
     */
    public function day2Run(?int $value): self
    {
        $this->instance->setDay2Run($value);
        return $this;
    }

    /**
     * Unsets day 2 run field.
     */
    public function unsetDay2Run(): self
    {
        $this->instance->unsetDay2Run();
        return $this;
    }

    /**
     * Sets day 3 run field.
     */
    public function day3Run(?int $value): self
    {
        $this->instance->setDay3Run($value);
        return $this;
    }

    /**
     * Unsets day 3 run field.
     */
    public function unsetDay3Run(): self
    {
        $this->instance->unsetDay3Run();
        return $this;
    }

    /**
     * Sets day 4 run field.
     */
    public function day4Run(?int $value): self
    {
        $this->instance->setDay4Run($value);
        return $this;
    }

    /**
     * Unsets day 4 run field.
     */
    public function unsetDay4Run(): self
    {
        $this->instance->unsetDay4Run();
        return $this;
    }

    /**
     * Sets invoice distribution methods field.
     */
    public function invoiceDistributionMethods(?array $value): self
    {
        $this->instance->setInvoiceDistributionMethods($value);
        return $this;
    }

    /**
     * Sets output type field.
     */
    public function outputType(?string $value): self
    {
        $this->instance->setOutputType($value);
        return $this;
    }

    /**
     * Unsets output type field.
     */
    public function unsetOutputType(): self
    {
        $this->instance->unsetOutputType();
        return $this;
    }

    /**
     * Sets invoice account id field.
     */
    public function invoiceAccountID(?int $value): self
    {
        $this->instance->setInvoiceAccountID($value);
        return $this;
    }

    /**
     * Unsets invoice account id field.
     */
    public function unsetInvoiceAccountID(): self
    {
        $this->instance->unsetInvoiceAccountID();
        return $this;
    }

    /**
     * Sets invoice account number field.
     */
    public function invoiceAccountNumber(?string $value): self
    {
        $this->instance->setInvoiceAccountNumber($value);
        return $this;
    }

    /**
     * Unsets invoice account number field.
     */
    public function unsetInvoiceAccountNumber(): self
    {
        $this->instance->unsetInvoiceAccountNumber();
        return $this;
    }

    /**
     * Sets invoice account short name field.
     */
    public function invoiceAccountShortName(?string $value): self
    {
        $this->instance->setInvoiceAccountShortName($value);
        return $this;
    }

    /**
     * Unsets invoice account short name field.
     */
    public function unsetInvoiceAccountShortName(): self
    {
        $this->instance->unsetInvoiceAccountShortName();
        return $this;
    }

    /**
     * Sets best of indicator field.
     */
    public function bestOfIndicator(?bool $value): self
    {
        $this->instance->setBestOfIndicator($value);
        return $this;
    }

    /**
     * Sets is international field.
     */
    public function isInternational(?bool $value): self
    {
        $this->instance->setIsInternational($value);
        return $this;
    }

    /**
     * Sets total accounts field.
     */
    public function totalAccounts(?int $value): self
    {
        $this->instance->setTotalAccounts($value);
        return $this;
    }

    /**
     * Unsets total accounts field.
     */
    public function unsetTotalAccounts(): self
    {
        $this->instance->unsetTotalAccounts();
        return $this;
    }

    /**
     * Sets total active accounts field.
     */
    public function totalActiveAccounts(?int $value): self
    {
        $this->instance->setTotalActiveAccounts($value);
        return $this;
    }

    /**
     * Unsets total active accounts field.
     */
    public function unsetTotalActiveAccounts(): self
    {
        $this->instance->unsetTotalActiveAccounts();
        return $this;
    }

    /**
     * Sets total cards field.
     */
    public function totalCards(?int $value): self
    {
        $this->instance->setTotalCards($value);
        return $this;
    }

    /**
     * Unsets total cards field.
     */
    public function unsetTotalCards(): self
    {
        $this->instance->unsetTotalCards();
        return $this;
    }

    /**
     * Sets total active cards field.
     */
    public function totalActiveCards(?int $value): self
    {
        $this->instance->setTotalActiveCards($value);
        return $this;
    }

    /**
     * Unsets total active cards field.
     */
    public function unsetTotalActiveCards(): self
    {
        $this->instance->unsetTotalActiveCards();
        return $this;
    }

    /**
     * Sets total blocked cards field.
     */
    public function totalBlockedCards(?int $value): self
    {
        $this->instance->setTotalBlockedCards($value);
        return $this;
    }

    /**
     * Unsets total blocked cards field.
     */
    public function unsetTotalBlockedCards(): self
    {
        $this->instance->unsetTotalBlockedCards();
        return $this;
    }

    /**
     * Sets total cancelled cards field.
     */
    public function totalCancelledCards(?int $value): self
    {
        $this->instance->setTotalCancelledCards($value);
        return $this;
    }

    /**
     * Unsets total cancelled cards field.
     */
    public function unsetTotalCancelledCards(): self
    {
        $this->instance->unsetTotalCancelledCards();
        return $this;
    }

    /**
     * Sets total expired cards field.
     */
    public function totalExpiredCards(?int $value): self
    {
        $this->instance->setTotalExpiredCards($value);
        return $this;
    }

    /**
     * Unsets total expired cards field.
     */
    public function unsetTotalExpiredCards(): self
    {
        $this->instance->unsetTotalExpiredCards();
        return $this;
    }

    /**
     * Sets total renewal pending cards field.
     */
    public function totalRenewalPendingCards(?int $value): self
    {
        $this->instance->setTotalRenewalPendingCards($value);
        return $this;
    }

    /**
     * Unsets total renewal pending cards field.
     */
    public function unsetTotalRenewalPendingCards(): self
    {
        $this->instance->unsetTotalRenewalPendingCards();
        return $this;
    }

    /**
     * Sets total replaced cards field.
     */
    public function totalReplacedCards(?int $value): self
    {
        $this->instance->setTotalReplacedCards($value);
        return $this;
    }

    /**
     * Unsets total replaced cards field.
     */
    public function unsetTotalReplacedCards(): self
    {
        $this->instance->unsetTotalReplacedCards();
        return $this;
    }

    /**
     * Sets total temporary block cards by customer field.
     */
    public function totalTemporaryBlockCardsByCustomer(?int $value): self
    {
        $this->instance->setTotalTemporaryBlockCardsByCustomer($value);
        return $this;
    }

    /**
     * Unsets total temporary block cards by customer field.
     */
    public function unsetTotalTemporaryBlockCardsByCustomer(): self
    {
        $this->instance->unsetTotalTemporaryBlockCardsByCustomer();
        return $this;
    }

    /**
     * Sets total temporary block cards by shell field.
     */
    public function totalTemporaryBlockCardsByShell(?int $value): self
    {
        $this->instance->setTotalTemporaryBlockCardsByShell($value);
        return $this;
    }

    /**
     * Unsets total temporary block cards by shell field.
     */
    public function unsetTotalTemporaryBlockCardsByShell(): self
    {
        $this->instance->unsetTotalTemporaryBlockCardsByShell();
        return $this;
    }

    /**
     * Sets total new cards field.
     */
    public function totalNewCards(?int $value): self
    {
        $this->instance->setTotalNewCards($value);
        return $this;
    }

    /**
     * Unsets total new cards field.
     */
    public function unsetTotalNewCards(): self
    {
        $this->instance->unsetTotalNewCards();
        return $this;
    }

    /**
     * Sets total fraud cards field.
     */
    public function totalFraudCards(?int $value): self
    {
        $this->instance->setTotalFraudCards($value);
        return $this;
    }

    /**
     * Unsets total fraud cards field.
     */
    public function unsetTotalFraudCards(): self
    {
        $this->instance->unsetTotalFraudCards();
        return $this;
    }

    /**
     * Sets total blocked accounts field.
     */
    public function totalBlockedAccounts(?int $value): self
    {
        $this->instance->setTotalBlockedAccounts($value);
        return $this;
    }

    /**
     * Unsets total blocked accounts field.
     */
    public function unsetTotalBlockedAccounts(): self
    {
        $this->instance->unsetTotalBlockedAccounts();
        return $this;
    }

    /**
     * Sets total cancelled accounts field.
     */
    public function totalCancelledAccounts(?int $value): self
    {
        $this->instance->setTotalCancelledAccounts($value);
        return $this;
    }

    /**
     * Unsets total cancelled accounts field.
     */
    public function unsetTotalCancelledAccounts(): self
    {
        $this->instance->unsetTotalCancelledAccounts();
        return $this;
    }

    /**
     * Sets payer trading name field.
     */
    public function payerTradingName(?string $value): self
    {
        $this->instance->setPayerTradingName($value);
        return $this;
    }

    /**
     * Unsets payer trading name field.
     */
    public function unsetPayerTradingName(): self
    {
        $this->instance->unsetPayerTradingName();
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets billing language field.
     */
    public function billingLanguage(?string $value): self
    {
        $this->instance->setBillingLanguage($value);
        return $this;
    }

    /**
     * Unsets billing language field.
     */
    public function unsetBillingLanguage(): self
    {
        $this->instance->unsetBillingLanguage();
        return $this;
    }

    /**
     * Sets legal entity field.
     */
    public function legalEntity(?string $value): self
    {
        $this->instance->setLegalEntity($value);
        return $this;
    }

    /**
     * Unsets legal entity field.
     */
    public function unsetLegalEntity(): self
    {
        $this->instance->unsetLegalEntity();
        return $this;
    }

    /**
     * Sets date established field.
     */
    public function dateEstablished(?string $value): self
    {
        $this->instance->setDateEstablished($value);
        return $this;
    }

    /**
     * Unsets date established field.
     */
    public function unsetDateEstablished(): self
    {
        $this->instance->unsetDateEstablished();
        return $this;
    }

    /**
     * Sets customer classification field.
     */
    public function customerClassification(?string $value): self
    {
        $this->instance->setCustomerClassification($value);
        return $this;
    }

    /**
     * Unsets customer classification field.
     */
    public function unsetCustomerClassification(): self
    {
        $this->instance->unsetCustomerClassification();
        return $this;
    }

    /**
     * Sets industry class field.
     */
    public function industryClass(?string $value): self
    {
        $this->instance->setIndustryClass($value);
        return $this;
    }

    /**
     * Unsets industry class field.
     */
    public function unsetIndustryClass(): self
    {
        $this->instance->unsetIndustryClass();
        return $this;
    }

    /**
     * Sets marketing segmentation field.
     */
    public function marketingSegmentation(?string $value): self
    {
        $this->instance->setMarketingSegmentation($value);
        return $this;
    }

    /**
     * Unsets marketing segmentation field.
     */
    public function unsetMarketingSegmentation(): self
    {
        $this->instance->unsetMarketingSegmentation();
        return $this;
    }

    /**
     * Sets line of business field.
     */
    public function lineOfBusiness(?string $value): self
    {
        $this->instance->setLineOfBusiness($value);
        return $this;
    }

    /**
     * Unsets line of business field.
     */
    public function unsetLineOfBusiness(): self
    {
        $this->instance->unsetLineOfBusiness();
        return $this;
    }

    /**
     * Sets print credit limit field.
     */
    public function printCreditLimit(?bool $value): self
    {
        $this->instance->setPrintCreditLimit($value);
        return $this;
    }

    /**
     * Sets card group type field.
     */
    public function cardGroupType(?string $value): self
    {
        $this->instance->setCardGroupType($value);
        return $this;
    }

    /**
     * Unsets card group type field.
     */
    public function unsetCardGroupType(): self
    {
        $this->instance->unsetCardGroupType();
        return $this;
    }

    /**
     * Sets renew cards field.
     */
    public function renewCards(?bool $value): self
    {
        $this->instance->setRenewCards($value);
        return $this;
    }

    /**
     * Sets allow select pin field.
     */
    public function allowSelectPIN(?bool $value): self
    {
        $this->instance->setAllowSelectPIN($value);
        return $this;
    }

    /**
     * Sets use fleet pin field.
     */
    public function useFleetPIN(?bool $value): self
    {
        $this->instance->setUseFleetPIN($value);
        return $this;
    }

    /**
     * Sets vatreg number field.
     */
    public function vATRegNumber(?string $value): self
    {
        $this->instance->setVATRegNumber($value);
        return $this;
    }

    /**
     * Unsets vatreg number field.
     */
    public function unsetVATRegNumber(): self
    {
        $this->instance->unsetVATRegNumber();
        return $this;
    }

    /**
     * Sets vatreg number 2 field.
     */
    public function vATRegNumber2(?string $value): self
    {
        $this->instance->setVATRegNumber2($value);
        return $this;
    }

    /**
     * Sets registration number field.
     */
    public function registrationNumber(?string $value): self
    {
        $this->instance->setRegistrationNumber($value);
        return $this;
    }

    /**
     * Unsets registration number field.
     */
    public function unsetRegistrationNumber(): self
    {
        $this->instance->unsetRegistrationNumber();
        return $this;
    }

    /**
     * Sets registration number 2 field.
     */
    public function registrationNumber2(?string $value): self
    {
        $this->instance->setRegistrationNumber2($value);
        return $this;
    }

    /**
     * Unsets registration number 2 field.
     */
    public function unsetRegistrationNumber2(): self
    {
        $this->instance->unsetRegistrationNumber2();
        return $this;
    }

    /**
     * Sets sales ledger balance field.
     */
    public function salesLedgerBalance(?float $value): self
    {
        $this->instance->setSalesLedgerBalance($value);
        return $this;
    }

    /**
     * Unsets sales ledger balance field.
     */
    public function unsetSalesLedgerBalance(): self
    {
        $this->instance->unsetSalesLedgerBalance();
        return $this;
    }

    /**
     * Sets exposure field.
     */
    public function exposure(?float $value): self
    {
        $this->instance->setExposure($value);
        return $this;
    }

    /**
     * Unsets exposure field.
     */
    public function unsetExposure(): self
    {
        $this->instance->unsetExposure();
        return $this;
    }

    /**
     * Sets outstanding debt field.
     */
    public function outstandingDebt(?float $value): self
    {
        $this->instance->setOutstandingDebt($value);
        return $this;
    }

    /**
     * Unsets outstanding debt field.
     */
    public function unsetOutstandingDebt(): self
    {
        $this->instance->unsetOutstandingDebt();
        return $this;
    }

    /**
     * Sets available credit field.
     */
    public function availableCredit(?float $value): self
    {
        $this->instance->setAvailableCredit($value);
        return $this;
    }

    /**
     * Unsets available credit field.
     */
    public function unsetAvailableCredit(): self
    {
        $this->instance->unsetAvailableCredit();
        return $this;
    }

    /**
     * Sets band field.
     */
    public function band(?string $value): self
    {
        $this->instance->setBand($value);
        return $this;
    }

    /**
     * Unsets band field.
     */
    public function unsetBand(): self
    {
        $this->instance->unsetBand();
        return $this;
    }

    /**
     * Sets global customer reference id field.
     */
    public function globalCustomerReferenceId(?string $value): self
    {
        $this->instance->setGlobalCustomerReferenceId($value);
        return $this;
    }

    /**
     * Unsets global customer reference id field.
     */
    public function unsetGlobalCustomerReferenceId(): self
    {
        $this->instance->unsetGlobalCustomerReferenceId();
        return $this;
    }

    /**
     * Sets credit limit field.
     */
    public function creditLimit(?float $value): self
    {
        $this->instance->setCreditLimit($value);
        return $this;
    }

    /**
     * Unsets credit limit field.
     */
    public function unsetCreditLimit(): self
    {
        $this->instance->unsetCreditLimit();
        return $this;
    }

    /**
     * Sets credit limit in customer currency field.
     */
    public function creditLimitInCustomerCurrency(?float $value): self
    {
        $this->instance->setCreditLimitInCustomerCurrency($value);
        return $this;
    }

    /**
     * Unsets credit limit in customer currency field.
     */
    public function unsetCreditLimitInCustomerCurrency(): self
    {
        $this->instance->unsetCreditLimitInCustomerCurrency();
        return $this;
    }

    /**
     * Sets billing currency code field.
     */
    public function billingCurrencyCode(?string $value): self
    {
        $this->instance->setBillingCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets billing currency code field.
     */
    public function unsetBillingCurrencyCode(): self
    {
        $this->instance->unsetBillingCurrencyCode();
        return $this;
    }

    /**
     * Sets billing currency symbol field.
     */
    public function billingCurrencySymbol(?string $value): self
    {
        $this->instance->setBillingCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets billing currency symbol field.
     */
    public function unsetBillingCurrencySymbol(): self
    {
        $this->instance->unsetBillingCurrencySymbol();
        return $this;
    }

    /**
     * Sets payment method field.
     */
    public function paymentMethod(?string $value): self
    {
        $this->instance->setPaymentMethod($value);
        return $this;
    }

    /**
     * Unsets payment method field.
     */
    public function unsetPaymentMethod(): self
    {
        $this->instance->unsetPaymentMethod();
        return $this;
    }

    /**
     * Sets payment terms field.
     */
    public function paymentTerms(?string $value): self
    {
        $this->instance->setPaymentTerms($value);
        return $this;
    }

    /**
     * Unsets payment terms field.
     */
    public function unsetPaymentTerms(): self
    {
        $this->instance->unsetPaymentTerms();
        return $this;
    }

    /**
     * Sets temporary credit limit increase field.
     */
    public function temporaryCreditLimitIncrease(?float $value): self
    {
        $this->instance->setTemporaryCreditLimitIncrease($value);
        return $this;
    }

    /**
     * Unsets temporary credit limit increase field.
     */
    public function unsetTemporaryCreditLimitIncrease(): self
    {
        $this->instance->unsetTemporaryCreditLimitIncrease();
        return $this;
    }

    /**
     * Sets temporary credit limit increase in customer currency field.
     */
    public function temporaryCreditLimitIncreaseInCustomerCurrency(?float $value): self
    {
        $this->instance->setTemporaryCreditLimitIncreaseInCustomerCurrency($value);
        return $this;
    }

    /**
     * Unsets temporary credit limit increase in customer currency field.
     */
    public function unsetTemporaryCreditLimitIncreaseInCustomerCurrency(): self
    {
        $this->instance->unsetTemporaryCreditLimitIncreaseInCustomerCurrency();
        return $this;
    }

    /**
     * Sets temporary credit limit expiry date field.
     */
    public function temporaryCreditLimitExpiryDate(?string $value): self
    {
        $this->instance->setTemporaryCreditLimitExpiryDate($value);
        return $this;
    }

    /**
     * Unsets temporary credit limit expiry date field.
     */
    public function unsetTemporaryCreditLimitExpiryDate(): self
    {
        $this->instance->unsetTemporaryCreditLimitExpiryDate();
        return $this;
    }

    /**
     * Sets payer bank account field.
     */
    public function payerBankAccount(?array $value): self
    {
        $this->instance->setPayerBankAccount($value);
        return $this;
    }

    /**
     * Sets card delivery address field.
     */
    public function cardDeliveryAddress(?Address $value): self
    {
        $this->instance->setCardDeliveryAddress($value);
        return $this;
    }

    /**
     * Sets correspondance address field.
     */
    public function correspondanceAddress(?Address $value): self
    {
        $this->instance->setCorrespondanceAddress($value);
        return $this;
    }

    /**
     * Sets billing address field.
     */
    public function billingAddress(?Address $value): self
    {
        $this->instance->setBillingAddress($value);
        return $this;
    }

    /**
     * Sets has active vol based pricing field.
     */
    public function hasActiveVolBasedPricing(?bool $value): self
    {
        $this->instance->setHasActiveVolBasedPricing($value);
        return $this;
    }

    /**
     * Sets has active vol based bonus field.
     */
    public function hasActiveVolBasedBonus(?bool $value): self
    {
        $this->instance->setHasActiveVolBasedBonus($value);
        return $this;
    }

    /**
     * Sets has active vol based association bonus field.
     */
    public function hasActiveVolBasedAssociationBonus(?bool $value): self
    {
        $this->instance->setHasActiveVolBasedAssociationBonus($value);
        return $this;
    }

    /**
     * Sets finance currency field.
     */
    public function financeCurrency(?FinanceCurrency2 $value): self
    {
        $this->instance->setFinanceCurrency($value);
        return $this;
    }

    /**
     * Sets tolls customer id field.
     */
    public function tollsCustomerId(?string $value): self
    {
        $this->instance->setTollsCustomerId($value);
        return $this;
    }

    /**
     * Unsets tolls customer id field.
     */
    public function unsetTollsCustomerId(): self
    {
        $this->instance->unsetTollsCustomerId();
        return $this;
    }

    /**
     * Sets tolls colco country type id field.
     */
    public function tollsColcoCountryTypeId(?string $value): self
    {
        $this->instance->setTollsColcoCountryTypeId($value);
        return $this;
    }

    /**
     * Unsets tolls colco country type id field.
     */
    public function unsetTollsColcoCountryTypeId(): self
    {
        $this->instance->unsetTollsColcoCountryTypeId();
        return $this;
    }

    /**
     * Sets contracts field.
     */
    public function contracts(?array $value): self
    {
        $this->instance->setContracts($value);
        return $this;
    }

    /**
     * Initializes a new payer details object.
     */
    public function build(): PayerDetails
    {
        return CoreHelper::clone($this->instance);
    }
}
