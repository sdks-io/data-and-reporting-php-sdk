<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\TransactionExceptionsRequest;

/**
 * Builder for model TransactionExceptionsRequest
 *
 * @see TransactionExceptionsRequest
 */
class TransactionExceptionsRequestBuilder
{
    /**
     * @var TransactionExceptionsRequest
     */
    private $instance;

    private function __construct(TransactionExceptionsRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new transaction exceptions request Builder object.
     */
    public static function init(
        string $transactionsFromDate,
        string $transactionsToDate,
        int $condition,
        int $outputType
    ): self {
        return new self(
            new TransactionExceptionsRequest($transactionsFromDate, $transactionsToDate, $condition, $outputType)
        );
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Sets accounts field.
     */
    public function accounts(?array $value): self
    {
        $this->instance->setAccounts($value);
        return $this;
    }

    /**
     * Sets value field.
     */
    public function value(?float $value): self
    {
        $this->instance->setValue($value);
        return $this;
    }

    /**
     * Sets products field.
     */
    public function products(?array $value): self
    {
        $this->instance->setProducts($value);
        return $this;
    }

    /**
     * Sets exception period field.
     */
    public function exceptionPeriod(?int $value): self
    {
        $this->instance->setExceptionPeriod($value);
        return $this;
    }

    /**
     * Sets fuel only field.
     */
    public function fuelOnly(?bool $value): self
    {
        $this->instance->setFuelOnly($value);
        return $this;
    }

    /**
     * Sets site group ids field.
     */
    public function siteGroupIds(?array $value): self
    {
        $this->instance->setSiteGroupIds($value);
        return $this;
    }

    /**
     * Sets use field id field.
     */
    public function useFieldId(?bool $value): self
    {
        $this->instance->setUseFieldId($value);
        return $this;
    }

    /**
     * Initializes a new transaction exceptions request object.
     */
    public function build(): TransactionExceptionsRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
