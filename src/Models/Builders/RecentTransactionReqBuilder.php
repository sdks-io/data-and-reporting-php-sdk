<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\RecentTransactionReq;

/**
 * Builder for model RecentTransactionReq
 *
 * @see RecentTransactionReq
 */
class RecentTransactionReqBuilder
{
    /**
     * @var RecentTransactionReq
     */
    private $instance;

    private function __construct(RecentTransactionReq $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new recent transaction req Builder object.
     */
    public static function init(): self
    {
        return new self(new RecentTransactionReq());
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets product code field.
     */
    public function productCode(?string $value): self
    {
        $this->instance->setProductCode($value);
        return $this;
    }

    /**
     * Unsets product code field.
     */
    public function unsetProductCode(): self
    {
        $this->instance->unsetProductCode();
        return $this;
    }

    /**
     * Sets purchased in country field.
     */
    public function purchasedInCountry(?string $value): self
    {
        $this->instance->setPurchasedInCountry($value);
        return $this;
    }

    /**
     * Unsets purchased in country field.
     */
    public function unsetPurchasedInCountry(): self
    {
        $this->instance->unsetPurchasedInCountry();
        return $this;
    }

    /**
     * Sets card pan field.
     */
    public function cardPAN(?string $value): self
    {
        $this->instance->setCardPAN($value);
        return $this;
    }

    /**
     * Unsets card pan field.
     */
    public function unsetCardPAN(): self
    {
        $this->instance->unsetCardPAN();
        return $this;
    }

    /**
     * Sets from date time field.
     */
    public function fromDateTime(?string $value): self
    {
        $this->instance->setFromDateTime($value);
        return $this;
    }

    /**
     * Unsets from date time field.
     */
    public function unsetFromDateTime(): self
    {
        $this->instance->unsetFromDateTime();
        return $this;
    }

    /**
     * Sets to date time field.
     */
    public function toDateTime(?string $value): self
    {
        $this->instance->setToDateTime($value);
        return $this;
    }

    /**
     * Unsets to date time field.
     */
    public function unsetToDateTime(): self
    {
        $this->instance->unsetToDateTime();
        return $this;
    }

    /**
     * Sets transaction status field.
     */
    public function transactionStatus(?string $value): self
    {
        $this->instance->setTransactionStatus($value);
        return $this;
    }

    /**
     * Unsets transaction status field.
     */
    public function unsetTransactionStatus(): self
    {
        $this->instance->unsetTransactionStatus();
        return $this;
    }

    /**
     * Sets fuel only field.
     */
    public function fuelOnly(?string $value): self
    {
        $this->instance->setFuelOnly($value);
        return $this;
    }

    /**
     * Unsets fuel only field.
     */
    public function unsetFuelOnly(): self
    {
        $this->instance->unsetFuelOnly();
        return $this;
    }

    /**
     * Sets product group name field.
     */
    public function productGroupName(?string $value): self
    {
        $this->instance->setProductGroupName($value);
        return $this;
    }

    /**
     * Unsets product group name field.
     */
    public function unsetProductGroupName(): self
    {
        $this->instance->unsetProductGroupName();
        return $this;
    }

    /**
     * Sets vehicle registration number field.
     */
    public function vehicleRegistrationNumber(?string $value): self
    {
        $this->instance->setVehicleRegistrationNumber($value);
        return $this;
    }

    /**
     * Unsets vehicle registration number field.
     */
    public function unsetVehicleRegistrationNumber(): self
    {
        $this->instance->unsetVehicleRegistrationNumber();
        return $this;
    }

    /**
     * Sets include declines field.
     */
    public function includeDeclines(?bool $value): self
    {
        $this->instance->setIncludeDeclines($value);
        return $this;
    }

    /**
     * Unsets include declines field.
     */
    public function unsetIncludeDeclines(): self
    {
        $this->instance->unsetIncludeDeclines();
        return $this;
    }

    /**
     * Sets card issuer name field.
     */
    public function cardIssuerName(?string $value): self
    {
        $this->instance->setCardIssuerName($value);
        return $this;
    }

    /**
     * Unsets card issuer name field.
     */
    public function unsetCardIssuerName(): self
    {
        $this->instance->unsetCardIssuerName();
        return $this;
    }

    /**
     * Sets column list field.
     */
    public function columnList(?string $value): self
    {
        $this->instance->setColumnList($value);
        return $this;
    }

    /**
     * Initializes a new recent transaction req object.
     */
    public function build(): RecentTransactionReq
    {
        return CoreHelper::clone($this->instance);
    }
}
