<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\Role;

/**
 * Builder for model Role
 *
 * @see Role
 */
class RoleBuilder
{
    /**
     * @var Role
     */
    private $instance;

    private function __construct(Role $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new role Builder object.
     */
    public static function init(): self
    {
        return new self(new Role());
    }

    /**
     * Sets role name field.
     */
    public function roleName(?string $value): self
    {
        $this->instance->setRoleName($value);
        return $this;
    }

    /**
     * Sets is customer admin field.
     */
    public function isCustomerAdmin(?bool $value): self
    {
        $this->instance->setIsCustomerAdmin($value);
        return $this;
    }

    /**
     * Sets is customer user field.
     */
    public function isCustomerUser(?bool $value): self
    {
        $this->instance->setIsCustomerUser($value);
        return $this;
    }

    /**
     * Sets is shell admin field.
     */
    public function isShellAdmin(?bool $value): self
    {
        $this->instance->setIsShellAdmin($value);
        return $this;
    }

    /**
     * Sets is service account field.
     */
    public function isServiceAccount(?bool $value): self
    {
        $this->instance->setIsServiceAccount($value);
        return $this;
    }

    /**
     * Sets is user admin field.
     */
    public function isUserAdmin(?bool $value): self
    {
        $this->instance->setIsUserAdmin($value);
        return $this;
    }

    /**
     * Initializes a new role object.
     */
    public function build(): Role
    {
        return CoreHelper::clone($this->instance);
    }
}
