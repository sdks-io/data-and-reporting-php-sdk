<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\EIDDocument;

/**
 * Builder for model EIDDocument
 *
 * @see EIDDocument
 */
class EIDDocumentBuilder
{
    /**
     * @var EIDDocument
     */
    private $instance;

    private function __construct(EIDDocument $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new eiddocument Builder object.
     */
    public static function init(): self
    {
        return new self(new EIDDocument());
    }

    /**
     * Sets document id field.
     */
    public function documentId(?int $value): self
    {
        $this->instance->setDocumentId($value);
        return $this;
    }

    /**
     * Unsets document id field.
     */
    public function unsetDocumentId(): self
    {
        $this->instance->unsetDocumentId();
        return $this;
    }

    /**
     * Sets account group id field.
     */
    public function accountGroupId(?string $value): self
    {
        $this->instance->setAccountGroupId($value);
        return $this;
    }

    /**
     * Unsets account group id field.
     */
    public function unsetAccountGroupId(): self
    {
        $this->instance->unsetAccountGroupId();
        return $this;
    }

    /**
     * Sets account group name field.
     */
    public function accountGroupName(?string $value): self
    {
        $this->instance->setAccountGroupName($value);
        return $this;
    }

    /**
     * Unsets account group name field.
     */
    public function unsetAccountGroupName(): self
    {
        $this->instance->unsetAccountGroupName();
        return $this;
    }

    /**
     * Sets document type field.
     */
    public function documentType(?string $value): self
    {
        $this->instance->setDocumentType($value);
        return $this;
    }

    /**
     * Unsets document type field.
     */
    public function unsetDocumentType(): self
    {
        $this->instance->unsetDocumentType();
        return $this;
    }

    /**
     * Sets document format field.
     */
    public function documentFormat(?string $value): self
    {
        $this->instance->setDocumentFormat($value);
        return $this;
    }

    /**
     * Unsets document format field.
     */
    public function unsetDocumentFormat(): self
    {
        $this->instance->unsetDocumentFormat();
        return $this;
    }

    /**
     * Sets document date field.
     */
    public function documentDate(?string $value): self
    {
        $this->instance->setDocumentDate($value);
        return $this;
    }

    /**
     * Unsets document date field.
     */
    public function unsetDocumentDate(): self
    {
        $this->instance->unsetDocumentDate();
        return $this;
    }

    /**
     * Sets number of invoices field.
     */
    public function numberOfInvoices(?int $value): self
    {
        $this->instance->setNumberOfInvoices($value);
        return $this;
    }

    /**
     * Unsets number of invoices field.
     */
    public function unsetNumberOfInvoices(): self
    {
        $this->instance->unsetNumberOfInvoices();
        return $this;
    }

    /**
     * Sets file size field.
     */
    public function fileSize(?int $value): self
    {
        $this->instance->setFileSize($value);
        return $this;
    }

    /**
     * Unsets file size field.
     */
    public function unsetFileSize(): self
    {
        $this->instance->unsetFileSize();
        return $this;
    }

    /**
     * Sets document status field.
     */
    public function documentStatus(?string $value): self
    {
        $this->instance->setDocumentStatus($value);
        return $this;
    }

    /**
     * Unsets document status field.
     */
    public function unsetDocumentStatus(): self
    {
        $this->instance->unsetDocumentStatus();
        return $this;
    }

    /**
     * Sets document name field.
     */
    public function documentName(?string $value): self
    {
        $this->instance->setDocumentName($value);
        return $this;
    }

    /**
     * Unsets document name field.
     */
    public function unsetDocumentName(): self
    {
        $this->instance->unsetDocumentName();
        return $this;
    }

    /**
     * Initializes a new eiddocument object.
     */
    public function build(): EIDDocument
    {
        return CoreHelper::clone($this->instance);
    }
}
