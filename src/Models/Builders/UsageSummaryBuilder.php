<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\UsageSummary;

/**
 * Builder for model UsageSummary
 *
 * @see UsageSummary
 */
class UsageSummaryBuilder
{
    /**
     * @var UsageSummary
     */
    private $instance;

    private function __construct(UsageSummary $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new usage summary Builder object.
     */
    public static function init(): self
    {
        return new self(new UsageSummary());
    }

    /**
     * Sets date field.
     */
    public function date(?string $value): self
    {
        $this->instance->setDate($value);
        return $this;
    }

    /**
     * Unsets date field.
     */
    public function unsetDate(): self
    {
        $this->instance->unsetDate();
        return $this;
    }

    /**
     * Sets product id field.
     */
    public function productId(?int $value): self
    {
        $this->instance->setProductId($value);
        return $this;
    }

    /**
     * Unsets product id field.
     */
    public function unsetProductId(): self
    {
        $this->instance->unsetProductId();
        return $this;
    }

    /**
     * Sets product code field.
     */
    public function productCode(?string $value): self
    {
        $this->instance->setProductCode($value);
        return $this;
    }

    /**
     * Unsets product code field.
     */
    public function unsetProductCode(): self
    {
        $this->instance->unsetProductCode();
        return $this;
    }

    /**
     * Sets product name field.
     */
    public function productName(?string $value): self
    {
        $this->instance->setProductName($value);
        return $this;
    }

    /**
     * Unsets product name field.
     */
    public function unsetProductName(): self
    {
        $this->instance->unsetProductName();
        return $this;
    }

    /**
     * Sets is fuel product field.
     */
    public function isFuelProduct(?bool $value): self
    {
        $this->instance->setIsFuelProduct($value);
        return $this;
    }

    /**
     * Unsets is fuel product field.
     */
    public function unsetIsFuelProduct(): self
    {
        $this->instance->unsetIsFuelProduct();
        return $this;
    }

    /**
     * Sets site group id field.
     */
    public function siteGroupId(?int $value): self
    {
        $this->instance->setSiteGroupId($value);
        return $this;
    }

    /**
     * Unsets site group id field.
     */
    public function unsetSiteGroupId(): self
    {
        $this->instance->unsetSiteGroupId();
        return $this;
    }

    /**
     * Sets site group name field.
     */
    public function siteGroupName(?string $value): self
    {
        $this->instance->setSiteGroupName($value);
        return $this;
    }

    /**
     * Unsets site group name field.
     */
    public function unsetSiteGroupName(): self
    {
        $this->instance->unsetSiteGroupName();
        return $this;
    }

    /**
     * Sets total volume field.
     */
    public function totalVolume(?float $value): self
    {
        $this->instance->setTotalVolume($value);
        return $this;
    }

    /**
     * Unsets total volume field.
     */
    public function unsetTotalVolume(): self
    {
        $this->instance->unsetTotalVolume();
        return $this;
    }

    /**
     * Sets total gross field.
     */
    public function totalGross(?float $value): self
    {
        $this->instance->setTotalGross($value);
        return $this;
    }

    /**
     * Unsets total gross field.
     */
    public function unsetTotalGross(): self
    {
        $this->instance->unsetTotalGross();
        return $this;
    }

    /**
     * Sets total net field.
     */
    public function totalNet(?float $value): self
    {
        $this->instance->setTotalNet($value);
        return $this;
    }

    /**
     * Unsets total net field.
     */
    public function unsetTotalNet(): self
    {
        $this->instance->unsetTotalNet();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets product group id field.
     */
    public function productGroupID(?int $value): self
    {
        $this->instance->setProductGroupID($value);
        return $this;
    }

    /**
     * Unsets product group id field.
     */
    public function unsetProductGroupID(): self
    {
        $this->instance->unsetProductGroupID();
        return $this;
    }

    /**
     * Sets product group name field.
     */
    public function productGroupName(?string $value): self
    {
        $this->instance->setProductGroupName($value);
        return $this;
    }

    /**
     * Unsets product group name field.
     */
    public function unsetProductGroupName(): self
    {
        $this->instance->unsetProductGroupName();
        return $this;
    }

    /**
     * Initializes a new usage summary object.
     */
    public function build(): UsageSummary
    {
        return CoreHelper::clone($this->instance);
    }
}
