<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\StatementOfAccountRequestFilters;

/**
 * Builder for model StatementOfAccountRequestFilters
 *
 * @see StatementOfAccountRequestFilters
 */
class StatementOfAccountRequestFiltersBuilder
{
    /**
     * @var StatementOfAccountRequestFilters
     */
    private $instance;

    private function __construct(StatementOfAccountRequestFilters $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new statement of account request filters Builder object.
     */
    public static function init(): self
    {
        return new self(new StatementOfAccountRequestFilters());
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets include monthly invoice trend field.
     */
    public function includeMonthlyInvoiceTrend(?bool $value): self
    {
        $this->instance->setIncludeMonthlyInvoiceTrend($value);
        return $this;
    }

    /**
     * Unsets include monthly invoice trend field.
     */
    public function unsetIncludeMonthlyInvoiceTrend(): self
    {
        $this->instance->unsetIncludeMonthlyInvoiceTrend();
        return $this;
    }

    /**
     * Sets include past statement of accounts field.
     */
    public function includePastStatementOfAccounts(?bool $value): self
    {
        $this->instance->setIncludePastStatementOfAccounts($value);
        return $this;
    }

    /**
     * Unsets include past statement of accounts field.
     */
    public function unsetIncludePastStatementOfAccounts(): self
    {
        $this->instance->unsetIncludePastStatementOfAccounts();
        return $this;
    }

    /**
     * Sets due or over due soadocuments only field.
     */
    public function dueOrOverDueSOADocumentsOnly(?bool $value): self
    {
        $this->instance->setDueOrOverDueSOADocumentsOnly($value);
        return $this;
    }

    /**
     * Unsets due or over due soadocuments only field.
     */
    public function unsetDueOrOverDueSOADocumentsOnly(): self
    {
        $this->instance->unsetDueOrOverDueSOADocumentsOnly();
        return $this;
    }

    /**
     * Sets number of soadocuments field.
     */
    public function numberOfSOADocuments(?int $value): self
    {
        $this->instance->setNumberOfSOADocuments($value);
        return $this;
    }

    /**
     * Unsets number of soadocuments field.
     */
    public function unsetNumberOfSOADocuments(): self
    {
        $this->instance->unsetNumberOfSOADocuments();
        return $this;
    }

    /**
     * Sets include account invoices summary field.
     */
    public function includeAccountInvoicesSummary(?bool $value): self
    {
        $this->instance->setIncludeAccountInvoicesSummary($value);
        return $this;
    }

    /**
     * Unsets include account invoices summary field.
     */
    public function unsetIncludeAccountInvoicesSummary(): self
    {
        $this->instance->unsetIncludeAccountInvoicesSummary();
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets accounts field.
     */
    public function accounts(?array $value): self
    {
        $this->instance->setAccounts($value);
        return $this;
    }

    /**
     * Initializes a new statement of account request filters object.
     */
    public function build(): StatementOfAccountRequestFilters
    {
        return CoreHelper::clone($this->instance);
    }
}
