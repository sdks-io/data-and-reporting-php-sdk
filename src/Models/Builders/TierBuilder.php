<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\Tier;

/**
 * Builder for model Tier
 *
 * @see Tier
 */
class TierBuilder
{
    /**
     * @var Tier
     */
    private $instance;

    private function __construct(Tier $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new tier Builder object.
     */
    public static function init(): self
    {
        return new self(new Tier());
    }

    /**
     * Sets tier price list id field.
     */
    public function tierPriceListId(?int $value): self
    {
        $this->instance->setTierPriceListId($value);
        return $this;
    }

    /**
     * Unsets tier price list id field.
     */
    public function unsetTierPriceListId(): self
    {
        $this->instance->unsetTierPriceListId();
        return $this;
    }

    /**
     * Sets price list description field.
     */
    public function priceListDescription(?string $value): self
    {
        $this->instance->setPriceListDescription($value);
        return $this;
    }

    /**
     * Unsets price list description field.
     */
    public function unsetPriceListDescription(): self
    {
        $this->instance->unsetPriceListDescription();
        return $this;
    }

    /**
     * Sets tier min field.
     */
    public function tierMin(?int $value): self
    {
        $this->instance->setTierMin($value);
        return $this;
    }

    /**
     * Unsets tier min field.
     */
    public function unsetTierMin(): self
    {
        $this->instance->unsetTierMin();
        return $this;
    }

    /**
     * Sets tier max field.
     */
    public function tierMax(?int $value): self
    {
        $this->instance->setTierMax($value);
        return $this;
    }

    /**
     * Unsets tier max field.
     */
    public function unsetTierMax(): self
    {
        $this->instance->unsetTierMax();
        return $this;
    }

    /**
     * Sets tiered pricing group name field.
     */
    public function tieredPricingGroupName(?string $value): self
    {
        $this->instance->setTieredPricingGroupName($value);
        return $this;
    }

    /**
     * Unsets tiered pricing group name field.
     */
    public function unsetTieredPricingGroupName(): self
    {
        $this->instance->unsetTieredPricingGroupName();
        return $this;
    }

    /**
     * Sets tiered pricing group period field.
     */
    public function tieredPricingGroupPeriod(?string $value): self
    {
        $this->instance->setTieredPricingGroupPeriod($value);
        return $this;
    }

    /**
     * Unsets tiered pricing group period field.
     */
    public function unsetTieredPricingGroupPeriod(): self
    {
        $this->instance->unsetTieredPricingGroupPeriod();
        return $this;
    }

    /**
     * Sets discount value field.
     */
    public function discountValue(?float $value): self
    {
        $this->instance->setDiscountValue($value);
        return $this;
    }

    /**
     * Unsets discount value field.
     */
    public function unsetDiscountValue(): self
    {
        $this->instance->unsetDiscountValue();
        return $this;
    }

    /**
     * Sets price per unit field.
     */
    public function pricePerUnit(?float $value): self
    {
        $this->instance->setPricePerUnit($value);
        return $this;
    }

    /**
     * Unsets price per unit field.
     */
    public function unsetPricePerUnit(): self
    {
        $this->instance->unsetPricePerUnit();
        return $this;
    }

    /**
     * Sets price per unit after discount field.
     */
    public function pricePerUnitAfterDiscount(?float $value): self
    {
        $this->instance->setPricePerUnitAfterDiscount($value);
        return $this;
    }

    /**
     * Unsets price per unit after discount field.
     */
    public function unsetPricePerUnitAfterDiscount(): self
    {
        $this->instance->unsetPricePerUnitAfterDiscount();
        return $this;
    }

    /**
     * Initializes a new tier object.
     */
    public function build(): Tier
    {
        return CoreHelper::clone($this->instance);
    }
}
