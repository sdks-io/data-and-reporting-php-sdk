<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\InvoiceDownloadReq;

/**
 * Builder for model InvoiceDownloadReq
 *
 * @see InvoiceDownloadReq
 */
class InvoiceDownloadReqBuilder
{
    /**
     * @var InvoiceDownloadReq
     */
    private $instance;

    private function __construct(InvoiceDownloadReq $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new invoice download req Builder object.
     */
    public static function init(): self
    {
        return new self(new InvoiceDownloadReq());
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?array $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Sets document reference field.
     */
    public function documentReference(?array $value): self
    {
        $this->instance->setDocumentReference($value);
        return $this;
    }

    /**
     * Sets invoice or soanumber field.
     */
    public function invoiceOrSOANumber(?string $value): self
    {
        $this->instance->setInvoiceOrSOANumber($value);
        return $this;
    }

    /**
     * Unsets invoice or soanumber field.
     */
    public function unsetInvoiceOrSOANumber(): self
    {
        $this->instance->unsetInvoiceOrSOANumber();
        return $this;
    }

    /**
     * Initializes a new invoice download req object.
     */
    public function build(): InvoiceDownloadReq
    {
        return CoreHelper::clone($this->instance);
    }
}
