<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\Accounts;
use ShellDataReportingAPIsLib\Models\AuditRequest;

/**
 * Builder for model AuditRequest
 *
 * @see AuditRequest
 */
class AuditRequestBuilder
{
    /**
     * @var AuditRequest
     */
    private $instance;

    private function __construct(AuditRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new audit request Builder object.
     */
    public static function init(): self
    {
        return new self(new AuditRequest());
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets accounts field.
     */
    public function accounts(?Accounts $value): self
    {
        $this->instance->setAccounts($value);
        return $this;
    }

    /**
     * Sets page size field.
     */
    public function pageSize(?int $value): self
    {
        $this->instance->setPageSize($value);
        return $this;
    }

    /**
     * Sets requested operation field.
     */
    public function requestedOperation(?array $value): self
    {
        $this->instance->setRequestedOperation($value);
        return $this;
    }

    /**
     * Sets sort order field.
     */
    public function sortOrder(?string $value): self
    {
        $this->instance->setSortOrder($value);
        return $this;
    }

    /**
     * Unsets sort order field.
     */
    public function unsetSortOrder(): self
    {
        $this->instance->unsetSortOrder();
        return $this;
    }

    /**
     * Sets search text field.
     */
    public function searchText(?string $value): self
    {
        $this->instance->setSearchText($value);
        return $this;
    }

    /**
     * Unsets search text field.
     */
    public function unsetSearchText(): self
    {
        $this->instance->unsetSearchText();
        return $this;
    }

    /**
     * Sets current page field.
     */
    public function currentPage(?int $value): self
    {
        $this->instance->setCurrentPage($value);
        return $this;
    }

    /**
     * Unsets current page field.
     */
    public function unsetCurrentPage(): self
    {
        $this->instance->unsetCurrentPage();
        return $this;
    }

    /**
     * Sets from date field.
     */
    public function fromDate(?string $value): self
    {
        $this->instance->setFromDate($value);
        return $this;
    }

    /**
     * Unsets from date field.
     */
    public function unsetFromDate(): self
    {
        $this->instance->unsetFromDate();
        return $this;
    }

    /**
     * Sets to date field.
     */
    public function toDate(?string $value): self
    {
        $this->instance->setToDate($value);
        return $this;
    }

    /**
     * Unsets to date field.
     */
    public function unsetToDate(): self
    {
        $this->instance->unsetToDate();
        return $this;
    }

    /**
     * Initializes a new audit request object.
     */
    public function build(): AuditRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
