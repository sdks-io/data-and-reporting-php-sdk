<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\Accounts;
use ShellDataReportingAPIsLib\Models\PriceTransactionRequest;

/**
 * Builder for model PriceTransactionRequest
 *
 * @see PriceTransactionRequest
 */
class PriceTransactionRequestBuilder
{
    /**
     * @var PriceTransactionRequest
     */
    private $instance;

    private function __construct(PriceTransactionRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new price transaction request Builder object.
     */
    public static function init(): self
    {
        return new self(new PriceTransactionRequest());
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets accounts field.
     */
    public function accounts(?Accounts $value): self
    {
        $this->instance->setAccounts($value);
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Unsets card id field.
     */
    public function unsetCardId(): self
    {
        $this->instance->unsetCardId();
        return $this;
    }

    /**
     * Sets card pan field.
     */
    public function cardPAN(?string $value): self
    {
        $this->instance->setCardPAN($value);
        return $this;
    }

    /**
     * Unsets card pan field.
     */
    public function unsetCardPAN(): self
    {
        $this->instance->unsetCardPAN();
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?string $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Unsets driver name field.
     */
    public function unsetDriverName(): self
    {
        $this->instance->unsetDriverName();
        return $this;
    }

    /**
     * Sets vehicle registration number field.
     */
    public function vehicleRegistrationNumber(?string $value): self
    {
        $this->instance->setVehicleRegistrationNumber($value);
        return $this;
    }

    /**
     * Unsets vehicle registration number field.
     */
    public function unsetVehicleRegistrationNumber(): self
    {
        $this->instance->unsetVehicleRegistrationNumber();
        return $this;
    }

    /**
     * Sets invoice status field.
     */
    public function invoiceStatus(?string $value): self
    {
        $this->instance->setInvoiceStatus($value);
        return $this;
    }

    /**
     * Unsets invoice status field.
     */
    public function unsetInvoiceStatus(): self
    {
        $this->instance->unsetInvoiceStatus();
        return $this;
    }

    /**
     * Sets product id field.
     */
    public function productId(?int $value): self
    {
        $this->instance->setProductId($value);
        return $this;
    }

    /**
     * Unsets product id field.
     */
    public function unsetProductId(): self
    {
        $this->instance->unsetProductId();
        return $this;
    }

    /**
     * Sets product code field.
     */
    public function productCode(?string $value): self
    {
        $this->instance->setProductCode($value);
        return $this;
    }

    /**
     * Unsets product code field.
     */
    public function unsetProductCode(): self
    {
        $this->instance->unsetProductCode();
        return $this;
    }

    /**
     * Sets purchased in country field.
     */
    public function purchasedInCountry(?string $value): self
    {
        $this->instance->setPurchasedInCountry($value);
        return $this;
    }

    /**
     * Unsets purchased in country field.
     */
    public function unsetPurchasedInCountry(): self
    {
        $this->instance->unsetPurchasedInCountry();
        return $this;
    }

    /**
     * Sets card group id field.
     */
    public function cardGroupId(?int $value): self
    {
        $this->instance->setCardGroupId($value);
        return $this;
    }

    /**
     * Unsets card group id field.
     */
    public function unsetCardGroupId(): self
    {
        $this->instance->unsetCardGroupId();
        return $this;
    }

    /**
     * Sets sort order field.
     */
    public function sortOrder(?string $value): self
    {
        $this->instance->setSortOrder($value);
        return $this;
    }

    /**
     * Unsets sort order field.
     */
    public function unsetSortOrder(): self
    {
        $this->instance->unsetSortOrder();
        return $this;
    }

    /**
     * Sets from date field.
     */
    public function fromDate(?string $value): self
    {
        $this->instance->setFromDate($value);
        return $this;
    }

    /**
     * Unsets from date field.
     */
    public function unsetFromDate(): self
    {
        $this->instance->unsetFromDate();
        return $this;
    }

    /**
     * Sets to date field.
     */
    public function toDate(?string $value): self
    {
        $this->instance->setToDate($value);
        return $this;
    }

    /**
     * Unsets to date field.
     */
    public function unsetToDate(): self
    {
        $this->instance->unsetToDate();
        return $this;
    }

    /**
     * Sets period field.
     */
    public function period(?int $value): self
    {
        $this->instance->setPeriod($value);
        return $this;
    }

    /**
     * Unsets period field.
     */
    public function unsetPeriod(): self
    {
        $this->instance->unsetPeriod();
        return $this;
    }

    /**
     * Sets site code field.
     */
    public function siteCode(?string $value): self
    {
        $this->instance->setSiteCode($value);
        return $this;
    }

    /**
     * Unsets site code field.
     */
    public function unsetSiteCode(): self
    {
        $this->instance->unsetSiteCode();
        return $this;
    }

    /**
     * Sets site group id field.
     */
    public function siteGroupId(?int $value): self
    {
        $this->instance->setSiteGroupId($value);
        return $this;
    }

    /**
     * Unsets site group id field.
     */
    public function unsetSiteGroupId(): self
    {
        $this->instance->unsetSiteGroupId();
        return $this;
    }

    /**
     * Sets posting date from field.
     */
    public function postingDateFrom(?string $value): self
    {
        $this->instance->setPostingDateFrom($value);
        return $this;
    }

    /**
     * Unsets posting date from field.
     */
    public function unsetPostingDateFrom(): self
    {
        $this->instance->unsetPostingDateFrom();
        return $this;
    }

    /**
     * Sets posting date to field.
     */
    public function postingDateTo(?string $value): self
    {
        $this->instance->setPostingDateTo($value);
        return $this;
    }

    /**
     * Unsets posting date to field.
     */
    public function unsetPostingDateTo(): self
    {
        $this->instance->unsetPostingDateTo();
        return $this;
    }

    /**
     * Sets sales item id field.
     */
    public function salesItemId(?string $value): self
    {
        $this->instance->setSalesItemId($value);
        return $this;
    }

    /**
     * Unsets sales item id field.
     */
    public function unsetSalesItemId(): self
    {
        $this->instance->unsetSalesItemId();
        return $this;
    }

    /**
     * Sets transaction id field.
     */
    public function transactionId(?string $value): self
    {
        $this->instance->setTransactionId($value);
        return $this;
    }

    /**
     * Unsets transaction id field.
     */
    public function unsetTransactionId(): self
    {
        $this->instance->unsetTransactionId();
        return $this;
    }

    /**
     * Sets invoice date field.
     */
    public function invoiceDate(?string $value): self
    {
        $this->instance->setInvoiceDate($value);
        return $this;
    }

    /**
     * Unsets invoice date field.
     */
    public function unsetInvoiceDate(): self
    {
        $this->instance->unsetInvoiceDate();
        return $this;
    }

    /**
     * Sets invoice number field.
     */
    public function invoiceNumber(?string $value): self
    {
        $this->instance->setInvoiceNumber($value);
        return $this;
    }

    /**
     * Unsets invoice number field.
     */
    public function unsetInvoiceNumber(): self
    {
        $this->instance->unsetInvoiceNumber();
        return $this;
    }

    /**
     * Sets valid invoice date only field.
     */
    public function validInvoiceDateOnly(?bool $value): self
    {
        $this->instance->setValidInvoiceDateOnly($value);
        return $this;
    }

    /**
     * Unsets valid invoice date only field.
     */
    public function unsetValidInvoiceDateOnly(): self
    {
        $this->instance->unsetValidInvoiceDateOnly();
        return $this;
    }

    /**
     * Sets invoice from date field.
     */
    public function invoiceFromDate(?string $value): self
    {
        $this->instance->setInvoiceFromDate($value);
        return $this;
    }

    /**
     * Unsets invoice from date field.
     */
    public function unsetInvoiceFromDate(): self
    {
        $this->instance->unsetInvoiceFromDate();
        return $this;
    }

    /**
     * Sets invoice to date field.
     */
    public function invoiceToDate(?string $value): self
    {
        $this->instance->setInvoiceToDate($value);
        return $this;
    }

    /**
     * Unsets invoice to date field.
     */
    public function unsetInvoiceToDate(): self
    {
        $this->instance->unsetInvoiceToDate();
        return $this;
    }

    /**
     * Sets fuel only field.
     */
    public function fuelOnly(?bool $value): self
    {
        $this->instance->setFuelOnly($value);
        return $this;
    }

    /**
     * Unsets fuel only field.
     */
    public function unsetFuelOnly(): self
    {
        $this->instance->unsetFuelOnly();
        return $this;
    }

    /**
     * Sets include fees field.
     */
    public function includeFees(?bool $value): self
    {
        $this->instance->setIncludeFees($value);
        return $this;
    }

    /**
     * Unsets include fees field.
     */
    public function unsetIncludeFees(): self
    {
        $this->instance->unsetIncludeFees();
        return $this;
    }

    /**
     * Sets use field id field.
     */
    public function useFieldId(?bool $value): self
    {
        $this->instance->setUseFieldId($value);
        return $this;
    }

    /**
     * Unsets use field id field.
     */
    public function unsetUseFieldId(): self
    {
        $this->instance->unsetUseFieldId();
        return $this;
    }

    /**
     * Sets current page field.
     */
    public function currentPage(?int $value): self
    {
        $this->instance->setCurrentPage($value);
        return $this;
    }

    /**
     * Unsets current page field.
     */
    public function unsetCurrentPage(): self
    {
        $this->instance->unsetCurrentPage();
        return $this;
    }

    /**
     * Sets page size field.
     */
    public function pageSize(?int $value): self
    {
        $this->instance->setPageSize($value);
        return $this;
    }

    /**
     * Initializes a new price transaction request object.
     */
    public function build(): PriceTransactionRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
