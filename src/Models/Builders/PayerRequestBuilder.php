<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellDataReportingAPIsLib\Models\PayerRequest;

/**
 * Builder for model PayerRequest
 *
 * @see PayerRequest
 */
class PayerRequestBuilder
{
    /**
     * @var PayerRequest
     */
    private $instance;

    private function __construct(PayerRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new payer request Builder object.
     */
    public static function init(): self
    {
        return new self(new PayerRequest());
    }

    /**
     * Sets payers field.
     */
    public function payers(?array $value): self
    {
        $this->instance->setPayers($value);
        return $this;
    }

    /**
     * Sets return basic details only field.
     */
    public function returnBasicDetailsOnly(?bool $value): self
    {
        $this->instance->setReturnBasicDetailsOnly($value);
        return $this;
    }

    /**
     * Sets include addresses field.
     */
    public function includeAddresses(?bool $value): self
    {
        $this->instance->setIncludeAddresses($value);
        return $this;
    }

    /**
     * Sets include bonus parameters field.
     */
    public function includeBonusParameters(?bool $value): self
    {
        $this->instance->setIncludeBonusParameters($value);
        return $this;
    }

    /**
     * Sets current page field.
     */
    public function currentPage(?int $value): self
    {
        $this->instance->setCurrentPage($value);
        return $this;
    }

    /**
     * Sets page size field.
     */
    public function pageSize(?int $value): self
    {
        $this->instance->setPageSize($value);
        return $this;
    }

    /**
     * Initializes a new payer request object.
     */
    public function build(): PayerRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
