<?php

declare(strict_types=1);

/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellDataReportingAPIsLib\Authentication;

use Core\Authentication\CoreAuth;
use ShellDataReportingAPIsLib\ConfigurationDefaults;
use Core\Request\Parameters\HeaderParam;
use Core\Utils\CoreHelper;

/**
 * Utility class for authorization and token management.
 */
class BasicAuthManager extends CoreAuth implements BasicAuthCredentials
{
    /**
     * @var array
     */
    private $config;

    public function __construct(array $config)
    {
        $this->config = $config;
        parent::__construct(HeaderParam::init(
            'Authorization',
            CoreHelper::getBasicAuthEncodedString($this->getUsername(), $this->getPassword())
        )->requiredNonEmpty());
    }

    /**
     * String value for username.
     */
    public function getUsername(): string
    {
        return $this->config['username'] ?? ConfigurationDefaults::USERNAME;
    }

    /**
     * String value for password.
     */
    public function getPassword(): string
    {
        return $this->config['password'] ?? ConfigurationDefaults::PASSWORD;
    }

    /**
     * Checks if provided credentials match with existing ones.
     *
     * @param string $username The username to use with basic authentication
     * @param string $password The password to use with basic authentication
     */
    public function equals(string $username, string $password): bool
    {
        return $username == $this->getUsername() &&
            $password == $this->getPassword();
    }
}
